{"version":3,"sources":["components/connectors.js","components/Navbar.js","components/Vault.js","components/RangeSlider.js","components/Gateway.js","connectors/NetworkConnector.ts","connectors/index.ts","hooks/useAuth.ts","components/Governance.js","components/App.js","App.js","serviceWorker.js","index.js"],"names":["InjectedConnector","supportedChainIds","Navbar","props","react_default","a","createElement","class","data-multi-switch","data-menuanchor","href","onClick","undefined","account","onPresentConnectModal","onPresentAccountModal","Vault","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setNetworkId","_React$useState3","_React$useState4","devilToken","setDevilToken","_React$useState5","_React$useState6","setDevilTokenAddress","_React$useState7","_React$useState8","setRwd","_React$useState9","_React$useState10","setRwdAddress","_React$useState11","_React$useState12","_React$useState13","_React$useState14","devilVault","setDevilVault","_React$useState15","_React$useState16","setDevilVaultAddress","_React$useState17","_React$useState18","devilTokenBalance","setDevilTokenBalance","_React$useState19","_React$useState20","_React$useState21","_React$useState22","_React$useState23","_React$useState24","amountStaked","setAmountStaked","_React$useState25","_React$useState26","lifetimeRewardsGiven","setLifetimeRewardsGiven","_React$useState27","_React$useState28","globalStakingBalance","setGlobalStakingBalance","_React$useState29","_React$useState30","pendingUserRewards","setPendingUserRewards","_React$useState31","_React$useState32","setSymbol","_useState","_useState2","_React$useState33","_React$useState34","updateState","setUpdateState","inputRef","useRef","update","_update","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee4","wrap","_context4","prev","next","_ref3","_callee3","_context3","methods","balanceOf","call","sent","toString","globalStakingTokenBalance","rewardsPending","stop","init","window","web3","Web3","currentProvider","useEffect","_ref","_callee","networkId","_devilVault","rwdAddress","rwd","_devilTokenBalance","_amountStaked","_globalStakingBalance","_lifetimeRewardsGiven","_pendingUserRewards","_symbol","_context","eth","net","getId","Contract","DevilVaultAbi","console","log","error","alert","DevilTokenAbi","RwdAbi","symbol","events","Staked","fromBlock","on","event","Withdrawn","RewardClaimed","RewardDistributed","stakeTokensVault","_ref2","_callee2","amount","_context2","transfer","_address","send","from","hash","stake","_x","parseFloat","utils","fromWei","toFixed","src","alt","width","height","style","textAlign","data-np-checked","type","ref","className","preventDefault","current","value","toWei","withdraw","unstakeTokensVault","claim","Gateway","devilGateway","setDevilGateway","devilGatewayAddress","setDevilGatewayAddress","_React$useState35","_React$useState36","_React$useState37","_React$useState38","ethBalance","setEthBalance","_React$useState39","_React$useState40","getBalance","_ethBalance","DevilGatewayAbi","DEVLPurchased","DEVLSold","data-modal-trigger","div","sendTransaction","to","buyDevl","approve","sellDevl","gasLimit","id","tabindex","role","boxShadow","borderRadius","margin","color","dist_default","defaultAmount","API_KEY","process","filters","onlyCryptos","data-dismiss","aria-label","aria-hidden","RequestError","message","code","data","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","Error","MiniRpcProvider","chainId","url","batchWaitTimeMs","_this2","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","response","json","byKey","_iterator","_step","_result","_byKey$_result$id","resolve","reject","method","info","fetch","headers","content-type","accept","body","JSON","stringify","map","item","request","t0","forEach","abrupt","ok","concat","status","statusText","t1","_ref4","reduce","memo","_createForOfIteratorHelper","s","n","done","result","err","e","f","sendAsync","callback","params","then","jsonrpc","catch","_ref5","promise","Promise","push","setTimeout","_x2","parsed","URL","pathname","NetworkConnector","_AbstractConnector","_ref6","_this3","urls","defaultChainId","invariant","keys","length","k","Number","providers","currentChainId","accumulator","inherits","createClass","key","_activate","provider","_getProvider","_getChainId","_callee5","_context5","_getAccount","_callee6","_context6","get","AbstractConnector","NETWORK_URL","NETWORK_CHAIN_ID","parseInt","defineProperty","injected","bscConnector","BscConnector","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","connectorsByName","WalletLinkConnector","appName","appLogoUrl","_connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","useAuth","_useWeb3React","useWeb3React","activate","deactivate","toastError","_len","args","Array","_key","join","login","useCallback","connectorID","connector","localStorage","removeItem","connectorLocalStorageKey","UnsupportedChainIdError","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","name","logout","Governance","hours","_useState3","_useState4","minutes","_useState5","_useState6","seconds","devilLock","setDevilLock","setDevilLockAddress","votingActive","setVotingActive","totalSupportVotes","setTotalSupportVotes","totalOpposeVotes","setTotalOpposeVotes","userSupportVotes","setUserSupportVotes","userOpposeVotes","setUserOpposeVotes","setVotingDeadline","setVotingStartTime","_React$useState41","_React$useState42","setTimeNow","_React$useState43","_React$useState44","setTimeLeft","_React$useState45","_React$useState46","minutesLeft","setMinutesLeft","_React$useState47","_React$useState48","devilLockStatus","setDevilLockStatus","votingDeadline","votingStartTime","timeNow","getVotingActive","getTotalYesVotes","getTotalNoVotes","getUserYesVotes","getUserNoVotes","Math","floor","Date","now","_devilLock","_votingActive","_totalSupportVotes","_totalOpposeVotes","_userSupportVotes","_userOpposeVotes","_votingDeadline","_votingStartTime","_devilLockStatus","_timeNow","_timeLeft","_minutesLeft","DevilLockAbi","UserVotedSupport","UserVotedOppose","DevilContractLocked","VotingElectionStatus","timeLeft","voteSupport","App","_useAuth","_useWalletModal","useWalletModal","Fragment","components_Navbar","data-toggle","components_Gateway","components_Vault","components_Governance","getLibrary","SCTheme","dark","zIndices","modal","core_esm","styled_components_browser_esm","theme","index_esm","App_App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c354f89.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\n\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42, 1337, 0x539, 97],\r\n})","import React, { Component } from \"react\";\r\nimport { injected } from \"./connectors.js\";\r\nimport getWeb3 from \"./getWeb3\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <header class=\"section rd-navbar-wrap\">\r\n      <nav class=\"rd-navbar\">\r\n        <div class=\"navbar-container\">\r\n          <div class=\"navbar-cell\">\r\n            <div class=\"navbar-panel\">\r\n              <button\r\n                class=\"navbar-switch\"\r\n                data-multi-switch='{\"targets\":\".rd-navbar\",\"scope\":\".rd-navbar\",\"isolate\":\"[data-multi-switch]\"}'\r\n              ></button>\r\n              <div class=\"navbar-logo\">\r\n                <h3>DEVIL PORTAL</h3>\r\n                </div>\r\n              \r\n              <p></p>\r\n              {/* <p>Contract: {contract} </p> */}\r\n              <p></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"navbar-spacer\"></div>\r\n          <div class=\"navbar-cell navbar-sidebar\">\r\n            <ul class=\"navbar-navigation rd-navbar-nav fullpage-navigation\">\r\n              <li\r\n                class=\"navbar-navigation-root-item\"\r\n                data-menuanchor=\"ndex.html\"\r\n              >\r\n                <a class=\"navbar-navigation-root-link\" href=\"index.html\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"navbar-cell\">\r\n            <div class=\"navbar-subpanel\">\r\n              <div class=\"navbar-subpanel-item\">\r\n                <button\r\n                  class=\"navbar-button navbar-info-button mdi-dots-vertical\"\r\n                  data-multi-switch='{\"targets\":\".rd-navbar\",\"scope\":\".rd-navbar\",\"class\":\"navbar-info-active\",\"isolate\":\"[data-multi-switch]\"}'\r\n                ></button>\r\n                <div class=\"navbar-info\">\r\n                  {/* {this.state.account === undefined ?  */}\r\n                  <button\r\n                    class=\"btn btn-sm\"\r\n                    onClick={() => {\r\n                      if (props.account === undefined) {\r\n                        props.onPresentConnectModal();\r\n                      } else {\r\n                        props.onPresentAccountModal();\r\n                      }\r\n                    }}\r\n                  >\r\n                    {!props.account ? \"Connect Wallet\" : \" \"}{props.account}\r\n                  </button>\r\n                  {/* :    */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component, useEffect, useState, setState, useRef } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport \"./App.css\";\r\nimport DevilVaultAbi from \"../remix_abis/DevilVault.json\";\r\nimport TetherAbi from \"../remix_abis/Tether.json\";\r\nimport RwdAbi from \"../remix_abis/RWD.json\";\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\n\r\nconst Vault = (props) => {\r\n\r\n  const [networkId, setNetworkId] = React.useState(undefined);\r\n  const [devilToken, setDevilToken] = React.useState([undefined]);\r\n  const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n  const [rwd, setRwd] = React.useState(undefined);\r\n  const [rwdAddress, setRwdAddress] = React.useState(\"\");\r\n  const [rewardTokenAddress, setRewardTokenAddress] = React.useState(\"\");\r\n  const [devilVault, setDevilVault] = React.useState([undefined]);\r\n  const [devilVaultAddress, setDevilVaultAddress] = React.useState(\"\");\r\n  const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n  const [rwdTokenBalance, setRwdTokenBalance] = React.useState(\"0\");\r\n  const [stakingBalance, setStakingBalance] = React.useState(\"0\");\r\n  const [amountStaked, setAmountStaked] = React.useState(\"0\");\r\n  const [lifetimeRewardsGiven, setLifetimeRewardsGiven] = React.useState(\"0\");\r\n  const [globalStakingBalance, setGlobalStakingBalance] = React.useState(\"0\");\r\n  const [pendingUserRewards, setPendingUserRewards] = React.useState(\"0\");\r\n  const [symbol, setSymbol] = React.useState([undefined]);\r\n  const [rangeval, setRangeval] = useState(null);\r\n  const [updateState, setUpdateState] = React.useState(false);\r\n  const inputRef = useRef();\r\n\r\n  let account = props.account\r\n  \r\n  window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n  useEffect(() => {\r\n    \r\n    const init = async () => {\r\n\r\n      const web3 = window.web3;\r\n      const networkId = await web3.eth.net.getId();\r\n      setNetworkId(networkId);\r\n\r\n      try{\r\n\r\n      //LOAD Chad Vault\r\n      const devilVaultAddress = \"0x42B852a2F28B305B947A6C9a6bA44d6f7C759ff0\";\r\n      setDevilVaultAddress(devilVaultAddress);\r\n      const devilVault = new web3.eth.Contract(\r\n        DevilVaultAbi,\r\n        devilVaultAddress\r\n      );\r\n      setDevilVault(devilVault);\r\n      console.log(devilVault);\r\n      } catch (error) {\r\n        alert(\r\n          'Failed to load devil vault.',\r\n              );\r\n      }\r\n\r\n        //LOAD devilToken\r\n        const devilTokenAddress = \"0xD280e0Fea29BcAe6ED9DD9fb4B9e5Fa90F5C249D\";\r\n        setDevilTokenAddress(devilTokenAddress);\r\n        const devilToken = new web3.eth.Contract(\r\n          DevilTokenAbi,\r\n          devilTokenAddress\r\n        );\r\n        setDevilToken(devilToken);\r\n        console.log(devilToken);\r\n\r\n        //LOAD RWD\r\n        const rwdAddress = \"0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56\";\r\n        setRwdAddress(rwdAddress);\r\n        const rwd = new web3.eth.Contract(\r\n          RwdAbi,\r\n          rwdAddress\r\n        );\r\n        setRwd(rwd);\r\n        console.log(rwd);\r\n\r\n        //Load our staking state and other account data\r\n\r\n        if (account !== undefined){\r\n          let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n          setDevilTokenBalance(devilTokenBalance.toString());\r\n          \r\n          const amountStaked = await devilVault.methods.amountStaked(account).call();\r\n          setAmountStaked(amountStaked.toString());\r\n\r\n          let globalStakingBalance = await devilVault.methods.globalStakingTokenBalance().call();\r\n          setGlobalStakingBalance(globalStakingBalance.toString());\r\n\r\n          let lifetimeRewardsGiven = await devilVault.methods.lifetimeRewardsGiven().call();\r\n          setLifetimeRewardsGiven(lifetimeRewardsGiven.toString());\r\n\r\n          let pendingUserRewards = await devilVault.methods.rewardsPending(account).call();\r\n          setPendingUserRewards(pendingUserRewards.toString());\r\n\r\n          let symbol = await rwd.methods.symbol().call();\r\n          setSymbol(symbol);\r\n\r\n          //event subscriptions that call update function to sync state variables w/ block chain\r\n\r\n          devilVault.events.Staked({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          devilVault.events.Withdrawn({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          devilVault.events.RewardClaimed({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n          \r\n          devilVault.events.RewardDistributed({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          const updateState = false\r\n          setUpdateState(updateState)\r\n        } \r\n        \r\n    }\r\n    init();\r\n  }, [account, amountStaked, setAmountStaked]);\r\n    \r\n  async function update() {\r\n    \r\n    const init = async () => {\r\n\r\n      let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n      setDevilTokenBalance(devilTokenBalance.toString());\r\n      \r\n      let amountStaked = await devilVault.methods.amountStaked(account).call();\r\n      setAmountStaked(amountStaked.toString());\r\n\r\n      let globalStakingBalance = await devilVault.methods.globalStakingTokenBalance().call();\r\n      setGlobalStakingBalance(globalStakingBalance.toString());\r\n\r\n      let lifetimeRewardsGiven = await devilVault.methods.lifetimeRewardsGiven().call();\r\n      setLifetimeRewardsGiven(lifetimeRewardsGiven.toString());\r\n\r\n      let pendingUserRewards = await devilVault.methods.rewardsPending(account).call();\r\n      setPendingUserRewards(pendingUserRewards.toString());\r\n\r\n    }\r\n    init();\r\n  }\r\n\r\n  const stakeTokensVault = async (amount) => {\r\n    setUpdateState(true)\r\n    devilToken.methods.transfer(devilVault._address, amount).send({from: account}).on('transactionHash', (hash) => { \r\n    devilVault.methods.stake(amount).send({from: account}).on('transactionHash', (hash) => { \r\n      })\r\n    })\r\n}\r\n\r\n  const unstakeTokensVault = (amount) => {\r\n  setUpdateState(true)\r\n  devilVault.methods.withdraw(amount).send({from: account}).on('transactionHash', (hash) => {\r\n  })\r\n}\r\n\r\n  const claimRewards = () => {\r\n  setUpdateState(true)\r\n  devilVault.methods.claim().send({from: account}).on('transactionHash', (hash) => {\r\n  })\r\n}\r\n    \r\n        return (\r\n            <div> \r\n                <div class=\"row row-30 justify-content-left\">\r\n                    <div class=\"col-4\">\r\n                        <div>\r\n                            Status: <b>{updateState ? 'loading' : 'complete'}</b>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"col-4\">\r\n                        <div class=\"h3\">\r\n                            TOTAL STAKED   \r\n                        </div>\r\n                            <p> {parseFloat(window.web3.utils.fromWei(globalStakingBalance, 'Ether')).toFixed(5)} DEVL </p>\r\n                    </div>\r\n                    <div class=\"col-4 justify-content-center\">\r\n                        <img class=\"mt-xxl-4\" src=\"assets/media/DEVIL_logo_red_centered.png\" alt=\"\" width=\"674\" height=\"572\"/>\r\n                    </div>\r\n                        <div class=\"col-4\">\r\n                            <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                              TOTAL REWARDS   \r\n                            </div>\r\n                                <p style={{ textAlign: 'right' }}>{parseFloat(window.web3.utils.fromWei(lifetimeRewardsGiven, 'Ether')).toFixed(5)} BUSD </p>\r\n                        </div>\r\n                </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"col-4\">\r\n                        <div class=\"h3\">\r\n                            USER \r\n                            STAKED   \r\n                        </div>\r\n                            <p> {parseFloat(window.web3.utils.fromWei(amountStaked, 'Ether')).toFixed(5)} DEVL </p>\r\n                    </div>\r\n                    <div class=\"col-4 justify-content-center\">\r\n                        <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                            <p>Balance: {parseFloat(window.web3.utils.fromWei(devilTokenBalance, 'Ether')).toFixed(5)}</p>\r\n                            <input type=\"number\" ref={inputRef} className=\"form-control\" />\r\n                                \r\n                                <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    let amount\r\n                                    amount = inputRef.current.value.toString() \r\n                                    amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                    stakeTokensVault(amount)\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>DEPOSIT\r\n                                </button>\r\n                                \r\n                            \r\n                                <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    let amount\r\n                                    amount = inputRef.current.value.toString()\r\n                                    amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                    unstakeTokensVault(amount)\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>WITHDRAW\r\n                                </button> \r\n\r\n                                <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    claimRewards()\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>CLAIM\r\n                                </button>                              \r\n                        </form>\r\n                    </div>\r\n                        <div class=\"col-4\">\r\n                            <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                                USER REWARDS   \r\n                            </div>\r\n                                <p style={{ textAlign: 'right' }}> {parseFloat(window.web3.utils.fromWei(pendingUserRewards, 'Ether')).toFixed(5)} BUSD </p>\r\n                        </div>\r\n                </div>\r\n                {/* <div class=\"row row-30 justify-content-left\">\r\n                <p>Address: {props.account && props.account}</p>\r\n                </div> */}\r\n             \r\n                                                                  \r\n                      {/* <!-- Modal: JUST A CODE SAVE FOR TEMPLATE NOT ACTIVE--> */}\r\n                      {/* <div class=\"modal fade\" id=\"modal-login\" tabindex=\"-1\" role=\"dialog\">\r\n                          <div class=\"modal-dialog\" role=\"document\">\r\n                              <div class=\"modal-content\">\r\n                                  <div class=\"modal-body text-center\">\r\n                                      <h3>Log In</h3>\r\n                                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing</p>\r\n                                      <form class=\"rd-mailform\">\r\n                                      <div class=\"form-group\">\r\n                                          <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Your name *\" data-constraints=\"@Required\" />\r\n                                      </div>\r\n                                      <div class=\"form-group\">\r\n                                          <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password *\" data-constraints=\"@Required\" />\r\n                                      </div>\r\n                                      <div class=\"offset-xxs group-40 d-flex flex-wrap flex-xs-nowrap align-items-center\">\r\n                                          <button class=\"btn btn-block\" type=\"submit\">Log in</button>\r\n                                      </div>\r\n                                      </form>\r\n                                  </div>\r\n                              <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n                              </div>\r\n                          </div>\r\n                      </div> */}\r\n                       {/* <!-- Preloader--> */}\r\n                      <div class=\"preloader\">\r\n                          <div class=\"preloader-inner\">\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                          </div>\r\n                      </div>\r\n            </div>    \r\n          );\r\n        }\r\n    \r\nexport default (Vault);","import React, { Component, useEffect, useState, setState } from \"react\";\r\n\r\nconst RangeSliderDEVL = (props) => {\r\n\r\n    const [rangeval, setRangeval] = useState(0);\r\n    const [displayNum, setDisplaynum] = useState(0);\r\n    // const [sliderMax, setSliderMax] = useState(0);\r\n\r\n    let sliderMax = props.ethBalance*(10**18);\r\n    // let sliderMax = parseFloat(window.web3.utils.fromWei(props.ethBalance, 'Ether')).toFixed(5);\r\n    // setSliderMax(ethBalance);\r\n  \r\n    return (\r\n          <div class=\"slidecontainer\">\r\n        <input type=\"range\" ref={props.inputRef2} className=\"custom-range\" min=\"0\" max={sliderMax} \r\n         onChange={(event) => setRangeval(event.target.value)} />\r\n        {rangeval}\r\n        {/* <p>{parseFloat(window.web3.utils.fromWei(props.ethBalance, 'Ether')).toFixed(5)}</p> */}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default RangeSliderDEVL;","import React, { Component, useEffect, useState, setState, useRef } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport \"./App.css\";\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\nimport DevilGatewayAbi from \"../remix_abis/Gateway.json\";\r\nimport OnramperWidget from \"@onramper/widget\";\r\nimport RwdAbi from \"../remix_abis/RWD.json\";\r\nimport OnramperWidgetContainer from \"./Onboarder.js\"\r\nimport RangeSliderDEVL from \"./RangeSlider\";\r\n\r\nconst Gateway = (props) => {\r\n\r\n  const [networkId, setNetworkId] = React.useState(undefined);\r\n  const [devilToken, setDevilToken] = React.useState([undefined]);\r\n  const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n  const [rwd, setRwd] = React.useState(undefined);\r\n  const [rwdAddress, setRwdAddress] = React.useState(\"\");\r\n  const [rewardTokenAddress, setRewardTokenAddress] = React.useState(\"\");\r\n  const [devilVault, setDevilVault] = React.useState([undefined]);\r\n  const [devilVaultAddress, setDevilVaultAddress] = React.useState(\"\");\r\n  const [devilGateway, setDevilGateway] = React.useState([undefined]);\r\n  const [devilGatewayAddress, setDevilGatewayAddress] = React.useState(\"\");\r\n  const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n  const [rwdTokenBalance, setRwdTokenBalance] = React.useState(\"0\");\r\n  const [stakingBalance, setStakingBalance] = React.useState(\"0\");\r\n  const [amountStaked, setAmountStaked] = React.useState(\"0\");\r\n  const [lifetimeRewardsGiven, setLifetimeRewardsGiven] = React.useState(\"0\");\r\n  const [globalStakingBalance, setGlobalStakingBalance] = React.useState(\"0\");\r\n  const [pendingUserRewards, setPendingUserRewards] = React.useState(\"0\");\r\n  const [symbol, setSymbol] = React.useState([undefined]);\r\n  const [ethBalance, setEthBalance] = React.useState(\"0\");\r\n  \r\n  const [updateState, setUpdateState] = React.useState(false);\r\n  const inputRef = useRef();\r\n  const inputRef2 = useRef();\r\n\r\n  const APIKEY = process.env.REACT_APP_API_KEY\r\n\r\n\r\n\r\n  let account = props.account\r\n\r\n  window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n  useEffect(() => {\r\n    \r\n    const init = async () => {\r\n\r\n        const web3 = window.web3;\r\n        const networkId = await web3.eth.net.getId();\r\n        setNetworkId(networkId);\r\n\r\n        //LOAD devilToken\r\n        const devilTokenAddress = \"0xD280e0Fea29BcAe6ED9DD9fb4B9e5Fa90F5C249D\";\r\n        setDevilTokenAddress(devilTokenAddress);\r\n        const devilToken = new web3.eth.Contract(\r\n          DevilTokenAbi,\r\n          devilTokenAddress\r\n        );\r\n        setDevilToken(devilToken);\r\n        console.log(devilToken);\r\n\r\n        //LOAD devil gateway\r\n        const devilGatewayAddress = \"0x1C781CE11522dCDCc1C082606Eb3c67231624FEd\";\r\n        setDevilGatewayAddress(devilGatewayAddress);\r\n        const devilGateway = new web3.eth.Contract(\r\n          DevilGatewayAbi,\r\n          devilGatewayAddress\r\n        );\r\n        setDevilGateway(devilGateway);\r\n        console.log(devilGateway);\r\n\r\n        //Load our staking state and other account data\r\n\r\n        if (account !== undefined){\r\n          let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n          setDevilTokenBalance(devilTokenBalance.toString());\r\n\r\n          let ethBalance = await web3.eth.getBalance(account);\r\n          setEthBalance(ethBalance);\r\n\r\n          //event subscriptions that call update function to sync state variables w/ block chain\r\n\r\n          devilGateway.events.DEVLPurchased({fromBlock: 0})\r\n            .on('data', event => update()\r\n          );\r\n\r\n          devilGateway.events.DEVLSold({fromBlock: 0})\r\n            .on('data', event => update()\r\n          );\r\n\r\n          const updateState = false\r\n          setUpdateState(updateState)\r\n        } \r\n        \r\n    }\r\n    init();\r\n  }, [account, devilTokenBalance, ethBalance]);\r\n    \r\n  async function update() {\r\n    \r\n    const init = async () => {\r\n\r\n      const web3 = window.web3;\r\n      let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n          setDevilTokenBalance(devilTokenBalance.toString());\r\n\r\n      let ethBalance = await web3.eth.getBalance(account);\r\n          setEthBalance(ethBalance);\r\n\r\n    }\r\n    init();\r\n  }\r\n\r\nconst buyDevl = (amount) => {\r\n  const web3 = window.web3;\r\n  web3.eth.sendTransaction({\r\n    from: account,\r\n    to: devilGatewayAddress,\r\n    value: amount,\r\n})\r\n}\r\n\r\nconst sellDevl = (amount) => {\r\n  setUpdateState(true)\r\n  devilToken.methods.approve(devilGateway._address, amount).send({from: account}).on('transactionHash', (hash) => {\r\n  devilGateway.methods.sellDevl(amount).send({gasLimit: 10000000, from: account})\r\n  })\r\n}\r\n        return (\r\n            <div> \r\n\r\n                <div class=\"row row-30 justify-content-left\">\r\n                    <div class=\"col-3\">\r\n                        <div>\r\n                            Status: <b>{updateState ? 'loading' : 'complete'}</b>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n\r\n                    </div>\r\n                    <div class=\"col-3\">\r\n                    <button class=\"btn btn-primary btn-sm btn-block\" data-modal-trigger='{\"target\":\"#modal-login\"}'>BUY CRYPTO</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                  <div class=\"h2\" style={{ textAlign: 'center' }}>\r\n                  DEVIL'S GATEWAY\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        <div>\r\n                          <img class=\"mt-xxl-4\" src=\"assets/media/DEVIL_logo_red_centered.png\" alt=\"\" width=\"300\" height=\"300\" />\r\n                        </div>\r\n                        <div>\r\n                          <p style={{ textAlign: 'center' }}>Balance</p>  \r\n                          <p style={{ textAlign: 'center' }}>{parseFloat(window.web3.utils.fromWei(devilTokenBalance, 'Ether')).toFixed(5)} DEVL</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-4 justify-content-center\">\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                          <div class=\"h4\" style={{ textAlign: 'center' }}>\r\n                           PRICE\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                          <div>\r\n                            {/* {/* <p style={{ textAlign: 'center' }}>N/A</p> */}\r\n                            <p style={{ textAlign: 'center' }}>Coming Soon</p>\r\n                          </div>\r\n                      </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                          {/* spacer */}\r\n                        </div>\r\n                        <div div class=\"row row-30 justify-content-center\">        \r\n                    </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"col-2 justify-content-center\">\r\n                        <div>\r\n                          <img class=\"mt-xxl-4\"  src=\"assets/media/bnb_logo_centered.png\" alt=\"\" width=\"300\" height=\"300\" />  \r\n                        </div>\r\n                        <div>\r\n                          <p style={{ textAlign: 'center' }}>Balance</p>\r\n                          <p style={{ textAlign: 'center' }}>{parseFloat(window.web3.utils.fromWei(ethBalance, 'Ether')).toFixed(5)} BNB</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                  <div class=\"col-2\"></div>\r\n                  <div class=\"col-3 justify-content-center\">\r\n                          <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                              <input type=\"number\" ref={inputRef} className=\"form-control\"/>\r\n                              {/* <RangeSliderDEVL\r\n                              ethBalance = {ethBalance}\r\n                              devilTokenBalance = {devilTokenBalance}\r\n                              web3={props.web3}\r\n                              inputRef2={inputRef2}\r\n                            /> */}\r\n                              {/* <p type='submit' onClick={(event) =>{\r\n                                event.preventDefault();\r\n                                let amount\r\n                                amount = inputRef = devilTokenBalance;\r\n                              }}\r\n                              style={{ textAlign: 'right' }}>Max\r\n                              </p> */}\r\n                                  <button \r\n                                      type='submit'\r\n                                      onClick={(event) => {\r\n                                      event.preventDefault()\r\n                                      let amount\r\n                                      amount = inputRef.current.value.toString() \r\n                                      amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                      buyDevl(amount)\r\n                                      }}\r\n                                      className='btn btn-primary btn-lg btn-block'>BUY DEVL\r\n                                  </button>\r\n                                  \r\n                          </form>\r\n                          </div>\r\n                        <div class=\"col-2\"></div>\r\n                        <div class=\"col-3 justify-content-center\">\r\n                        <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                            <input type=\"number\" ref={inputRef} className=\"form-control\"/>\r\n                            <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    let amount\r\n                                    amount = inputRef.current.value.toString() \r\n                                    amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                    sellDevl(amount)\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>SELL DEVL\r\n                            </button>\r\n                        </form>             \r\n                        </div>\r\n\r\n                    \r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">   \r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\"> \r\n                    </div>\r\n                    <div class=\"col-2 justify-content-center\">\r\n                        {/* Spacer */}\r\n                    </div>\r\n                </div>\r\n                <div class=\"row row-30 justify-content-center\">   \r\n                \r\n                      <div class=\"modal fade\" id=\"modal-login\" tabindex=\"-1\" role=\"dialog\">\r\n                          <div class=\"modal-dialog\" role=\"document\">\r\n                              <div class=\"modal-content\">\r\n                              {/* <article class=\"blurb blurb-boxed\"> */}\r\n                                <div\r\n                                  style={{\r\n                                    width: \"600px\",\r\n                                    height: \"600px\",\r\n                                    boxShadow: \"0 2px 10px 0 rgba(0, 0, 0, 0.1)\",\r\n                                    borderRadius: \"10px\",\r\n                                    margin: \"auto\",\r\n                                    color: \"#000003\"\r\n                                  }}\r\n                                >\r\n                                  <OnramperWidget\r\n                                    color= \"#000003\"\r\n                                    defaultAmount={100}\r\n                                    // defaultAddrs={account}\r\n                                    API_KEY={APIKEY}\r\n                                    filters={{\r\n                                      onlyCryptos: [\"BNB_BEP20\"]\r\n                                    }}\r\n                                  />\r\n                                </div>\r\n                              {/* </article> */}\r\n                              <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                     \r\n                       {/* <!-- Preloader--> */}\r\n                       </div>\r\n\r\n\r\n\r\n                      <div class=\"preloader\">\r\n                          <div class=\"preloader-inner\">\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                          </div>\r\n                      </div>\r\n            </div>    \r\n          );\r\n        }\r\n    \r\n//  {/* <!-- Modal: JUST A CODE SAVE FOR TEMPLATE NOT ACTIVE--> */}\r\n//                       {/* <div class=\"modal fade\" id=\"modal-login\" tabindex=\"-1\" role=\"dialog\">\r\n//                           <div class=\"modal-dialog\" role=\"document\">\r\n//                               <div class=\"modal-content\">\r\n//                                   <div class=\"modal-body text-center\">\r\n//                                       <h3>Log In</h3>\r\n//                                       <p>Lorem ipsum dolor sit amet, consectetur adipiscing</p>\r\n//                                       <form class=\"rd-mailform\">\r\n//                                       <div class=\"form-group\">\r\n//                                           <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Your name *\" data-constraints=\"@Required\" />\r\n//                                       </div>\r\n//                                       <div class=\"form-group\">\r\n//                                           <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password *\" data-constraints=\"@Required\" />\r\n//                                       </div>\r\n//                                       <div class=\"offset-xxs group-40 d-flex flex-wrap flex-xs-nowrap align-items-center\">\r\n//                                           <button class=\"btn btn-block\" type=\"submit\">Log in</button>\r\n//                                       </div>\r\n//                                       </form>\r\n//                                   </div>\r\n//                               <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n//                               </div>\r\n//                           </div>\r\n//                       </div> */}\r\n\r\n\r\n\r\nexport default (Gateway);\r\n\r\n// {/* //TEST API KEY: pk_test_lQP0Ao0cFm1bEbY2CGrdv3JVzcUSJUlF1D8gF25Mnsw0 */}\r\n\r\n\r\n\r\n ","import { ConnectorUpdate } from \"@web3-react/types\";\r\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\ninterface NetworkConnectorArguments {\r\n  urls: { [chainId: number]: string };\r\n  defaultChainId?: number;\r\n}\r\n\r\n// taken from ethers.js, compatible interface with web3 provider\r\ntype AsyncSendable = {\r\n  isMetaMask?: boolean;\r\n  host?: string;\r\n  path?: string;\r\n  sendAsync?: (\r\n    request: any,\r\n    callback: (error: any, response: any) => void\r\n  ) => void;\r\n  send?: (request: any, callback: (error: any, response: any) => void) => void;\r\n};\r\n\r\nclass RequestError extends Error {\r\n  constructor(message: string, public code: number, public data?: unknown) {\r\n    super(message);\r\n  }\r\n}\r\n\r\ninterface BatchItem {\r\n  request: { jsonrpc: \"2.0\"; id: number; method: string; params: unknown };\r\n  resolve: (result: any) => void;\r\n  reject: (error: Error) => void;\r\n}\r\n\r\nclass MiniRpcProvider implements AsyncSendable {\r\n  public readonly isMetaMask: false = false;\r\n\r\n  public readonly chainId: number;\r\n\r\n  public readonly url: string;\r\n\r\n  public readonly host: string;\r\n\r\n  public readonly path: string;\r\n\r\n  public readonly batchWaitTimeMs: number;\r\n\r\n  private nextId = 1;\r\n\r\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  private batch: BatchItem[] = [];\r\n\r\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\r\n    this.chainId = chainId;\r\n    this.url = url;\r\n    const parsed = new URL(url);\r\n    this.host = parsed.host;\r\n    this.path = parsed.pathname;\r\n    // how long to wait to batch calls\r\n    this.batchWaitTimeMs = 50;\r\n  }\r\n\r\n  public readonly clearBatch = async () => {\r\n    console.info(\"Clearing batch\", this.batch);\r\n    const { batch } = this;\r\n    this.batch = [];\r\n    this.batchTimeoutId = null;\r\n    let response: Response;\r\n    try {\r\n      response = await fetch(this.url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(batch.map((item) => item.request)),\r\n      });\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(new Error(\"Failed to send batch call\"))\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!response.ok) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(\r\n          new RequestError(`${response.status}: ${response.statusText}`, -32000)\r\n        )\r\n      );\r\n      return;\r\n    }\r\n\r\n    let json;\r\n    try {\r\n      json = await response.json();\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(new Error(\"Failed to parse JSON response\"))\r\n      );\r\n      return;\r\n    }\r\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\r\n      memo[current.request.id] = current;\r\n      return memo;\r\n    }, {});\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const result of json) {\r\n      const {\r\n        resolve,\r\n        reject,\r\n        request: { method },\r\n      } = byKey[result.id];\r\n      // @ts-ignore\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      if (resolve && reject) {\r\n        if (\"error\" in result) {\r\n          reject(\r\n            new RequestError(\r\n              result.error.message,\r\n              result.error.code,\r\n              result.error.data\r\n            )\r\n          );\r\n        } else if (\"result\" in result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new RequestError(\r\n              `Received unexpected JSON-RPC response to ${method} request.`,\r\n              -32000,\r\n              result\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  public readonly sendAsync = (\r\n    request: {\r\n      jsonrpc: \"2.0\";\r\n      id: number | string | null;\r\n      method: string;\r\n      params?: any;\r\n    },\r\n    callback: (error: any, response: any) => void\r\n  ): void => {\r\n    this.request(request.method, request.params)\r\n      .then((result) =>\r\n        callback(null, { jsonrpc: \"2.0\", id: request.id, result })\r\n      )\r\n      .catch((error) => callback(error, null));\r\n  };\r\n\r\n  public readonly request = async (\r\n    method: string | { method: string; params: unknown[] },\r\n    params?: any\r\n  ): Promise<unknown> => {\r\n    if (typeof method !== \"string\") {\r\n      return this.request(method.method, method.params);\r\n    }\r\n    if (method === \"eth_chainId\") {\r\n      return `0x${this.chainId.toString(16)}`;\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.batch.push({\r\n        request: {\r\n          jsonrpc: \"2.0\",\r\n          id: this.nextId++,\r\n          method,\r\n          params,\r\n        },\r\n        resolve,\r\n        reject,\r\n      });\r\n    });\r\n    if (!this.batchTimeoutId)\r\n      this.batchTimeoutId = setTimeout(this.clearBatch, this.batchWaitTimeMs);\r\n    return promise;\r\n  };\r\n}\r\n\r\nexport class NetworkConnector extends AbstractConnector {\r\n  private readonly providers: { [chainId: number]: MiniRpcProvider };\r\n\r\n  private currentChainId: number;\r\n\r\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\r\n    invariant(\r\n      defaultChainId || Object.keys(urls).length === 1,\r\n      \"defaultChainId is a required argument with >1 url\"\r\n    );\r\n    super({\r\n      supportedChainIds: Object.keys(urls).map((k): number => Number(k)),\r\n    });\r\n\r\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\r\n    this.providers = Object.keys(urls).reduce<{\r\n      [chainId: number]: MiniRpcProvider;\r\n    }>((accumulator, chainId) => {\r\n      accumulator[Number(chainId)] = new MiniRpcProvider(\r\n        Number(chainId),\r\n        urls[Number(chainId)]\r\n      );\r\n      return accumulator;\r\n    }, {});\r\n  }\r\n\r\n  public get provider(): MiniRpcProvider {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    return {\r\n      provider: this.providers[this.currentChainId],\r\n      chainId: this.currentChainId,\r\n      account: null,\r\n    };\r\n  }\r\n\r\n  public async getProvider(): Promise<MiniRpcProvider> {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.currentChainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return null;\r\n  }\r\n\r\n  public deactivate() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default NetworkConnector;\r\n","import { ConnectorNames } from \"@pancakeswap-libs/uikit\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { BscConnector } from \"@binance-chain/bsc-connector\";\r\nimport { NetworkConnector } from \"./NetworkConnector\";\r\n\r\nconst NETWORK_URL = \"https://bsc-dataseed.binance.org/\";\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(\"56\");\r\n\r\nif (typeof NETWORK_URL === \"undefined\") {\r\n  throw new Error(\r\n    `REACT_APP_NETWORK_URL must be a defined environment variable`\r\n  );\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n});\r\n\r\nlet networkLibrary: Web3Provider | undefined;\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  if (!networkLibrary)\r\n    networkLibrary = new Web3Provider(network.provider as any);\r\n  // eslint-disable-next-line no-return-assign\r\n  return networkLibrary;\r\n}\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [4, 56, 97],\r\n});\r\n\r\nexport const bscConnector = new BscConnector({ supportedChainIds: [56, 97] });\r\n\r\n// mainnet only\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n  bridge: \"https://pancakeswap.bridge.walletconnect.org\",\r\n  qrcode: true,\r\n  pollingInterval: 15000,\r\n});\r\n\r\n// mainnet only\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: NETWORK_URL,\r\n  appName: \"Uniswap\",\r\n  appLogoUrl:\r\n    \"https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg\",\r\n});\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\nimport { NoBscProviderError } from \"@binance-chain/bsc-connector\";\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from \"@web3-react/injected-connector\";\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from \"@web3-react/walletconnect-connector\";\r\nimport {\r\n  connectorLocalStorageKey,\r\n  ConnectorNames,\r\n} from \"@pancakeswap-libs/uikit\";\r\n\r\nimport { connectorsByName } from \"../connectors/index\";\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React();\r\n  // const { toastError } = useToast();\r\n  // @ts-ignore\r\n  const toastError = (err, ...args) => alert(err + \": \" + args.join(\" - \"));\r\n\r\n  const login = useCallback((connectorID: ConnectorNames) => {\r\n    const connector = connectorsByName[connectorID];\r\n    if (connector) {\r\n      console.log(connector);\r\n      activate(connector, async (error: Error) => {\r\n        window.localStorage.removeItem(connectorLocalStorageKey);\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          toastError(\r\n            \"Unsupported Chain Id\",\r\n            \"Unsupported Chain Id Error. Check your chain Id.\"\r\n          );\r\n        } else if (\r\n          error instanceof NoEthereumProviderError ||\r\n          error instanceof NoBscProviderError\r\n        ) {\r\n          toastError(\"Provider Error\", \"No provider was found\");\r\n        } else if (\r\n          error instanceof UserRejectedRequestErrorInjected ||\r\n          error instanceof UserRejectedRequestErrorWalletConnect\r\n        ) {\r\n          if (connector instanceof WalletConnectConnector) {\r\n            const walletConnector = connector as WalletConnectConnector;\r\n            walletConnector.walletConnectProvider = null;\r\n          }\r\n          toastError(\r\n            \"Authorization Error\",\r\n            \"Please authorize to access your account\"\r\n          );\r\n        } else {\r\n          toastError(error.name, error.message);\r\n        }\r\n      });\r\n    } else {\r\n      toastError(\"Can't find connector\", \"The connector config is wrong\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return { login, logout: deactivate };\r\n};\r\n\r\nexport default useAuth;\r\n","import React, {Component, useRef, ReactDOM, useState, useEffect} from 'react';\r\nimport Web3 from \"web3\";\r\nimport Timer from './Timer';\r\nimport DevilLockAbi from \"../remix_abis/DevilLock.json\";\r\nimport TetherAbi from \"../remix_abis/Tether.json\";\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\n\r\nconst Governance = (props) => {\r\n\r\n    //timer variables\r\n    const [hours, setHours] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [formattedTime, setFormattedTime] = React.useState()\r\n    const [hoursMinSecs, setHoursMinSecs] = React.useState({hours:hours, minutes:minutes, seconds:seconds})\r\n    \r\n\r\n    const [networkId, setNetworkId] = React.useState(undefined);\r\n    const [devilToken, setDevilToken] = React.useState([undefined]);\r\n    const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n    const [rwd, setRwd] = React.useState(undefined);\r\n    const [rwdAddress, setRwdAddress] = React.useState(\"\")\r\n    const [devilVault, setDevilVault] = React.useState([undefined]);\r\n    const [devilVaultAddress, setDevilVaultAddress] = React.useState(\"\");\r\n    const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n    const [updateState, setUpdateState] = React.useState(false);\r\n\r\n    //Devil Lock loading\r\n    const [devilLock, setDevilLock] = React.useState([undefined]);\r\n    const [devilLockAddress, setDevilLockAddress] = React.useState(\"\");\r\n    const [votingActive, setVotingActive] = React.useState(false);\r\n    const [totalSupportVotes, setTotalSupportVotes] = React.useState(0);\r\n    const [totalOpposeVotes, setTotalOpposeVotes] = React.useState(0);\r\n    const [userSupportVotes, setUserSupportVotes] = React.useState(0);\r\n    const [userOpposeVotes, setUserOpposeVotes] = React.useState(0);\r\n    const [votingDeadline, setVotingDeadline] = React.useState(0);\r\n    const [votingStartTime, setVotingStartTime] = React.useState(0);\r\n    const [timeNow, setTimeNow] = React.useState();\r\n    const [timeLeft, setTimeLeft] = React.useState();\r\n    const [minutesLeft, setMinutesLeft] = React.useState();\r\n    const [devilLockStatus, setDevilLockStatus] = React.useState(true);\r\n\r\n    const inputRef = useRef()\r\n    let account = props.account\r\n  \r\n    window.web3 = new Web3(window.web3.currentProvider);\r\n  \r\n    useEffect(() => {\r\n      \r\n      const init = async () => {\r\n  \r\n        const web3 = window.web3;\r\n        const networkId = await web3.eth.net.getId();\r\n        setNetworkId(networkId);\r\n  \r\n        try{\r\n        //LOAD Devil lock\r\n        const devilLockAddress = \"0xd39217757AfAFd226AeDCA1Bd20F34A97ECbeb50\";\r\n        setDevilLockAddress(devilLockAddress);\r\n        const devilLock = new web3.eth.Contract(\r\n          DevilLockAbi,\r\n          devilLockAddress\r\n        );\r\n        setDevilLock(devilLock);\r\n        console.log(devilLock);\r\n        } catch (error) {\r\n          alert(\r\n            'Failed to load Devil Lock.',\r\n                );\r\n        }\r\n\r\n        //LOAD devilToken\r\n        const devilTokenAddress = \"0xD280e0Fea29BcAe6ED9DD9fb4B9e5Fa90F5C249D\";\r\n        setDevilTokenAddress(devilTokenAddress);\r\n        const devilToken = new web3.eth.Contract(\r\n          DevilTokenAbi,\r\n          devilTokenAddress\r\n        );\r\n        setDevilToken(devilToken);\r\n        console.log(devilToken);\r\n    \r\n        //Load our staking state and other account data\r\n  \r\n          if (account !== undefined){\r\n            let votingActive = await devilLock.methods.getVotingActive().call()\r\n            setVotingActive(votingActive)\r\n\r\n            let totalSupportVotes = await devilLock.methods.getTotalYesVotes().call()\r\n            setTotalSupportVotes(totalSupportVotes)\r\n\r\n            let totalOpposeVotes = await devilLock.methods.getTotalNoVotes().call()\r\n            setTotalOpposeVotes(totalOpposeVotes)\r\n\r\n            let userSupportVotes = await devilLock.methods.getUserYesVotes(account).call()\r\n            setUserSupportVotes(userSupportVotes)\r\n\r\n            let userOpposeVotes = await devilLock.methods.getUserNoVotes(account).call()\r\n            setUserOpposeVotes(userOpposeVotes);\r\n\r\n            let devilTokenBalance = await devilToken.methods.balanceOf(account).call()\r\n            setDevilTokenBalance(devilTokenBalance.toString())\r\n\r\n            let votingDeadline = await devilLock.methods.votingDeadline().call()\r\n            setVotingDeadline(votingDeadline);\r\n\r\n            let votingStartTime = await devilLock.methods.votingStartTime().call()\r\n            setVotingStartTime(votingStartTime);\r\n\r\n            let devilLockStatus = await devilLock.methods.devilLockStatus().call()\r\n            setDevilLockStatus(devilLockStatus);\r\n\r\n            let timeNow = Math.floor(Date.now() / 1000)\r\n            setTimeNow(timeNow);\r\n\r\n            //event subscriptions that call update function to sync state variables w/ block chain\r\n\r\n            devilLock.events.UserVotedSupport({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            devilLock.events.UserVotedOppose({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            devilLock.events.DevilContractLocked({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            devilLock.events.VotingElectionStatus({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            //Timer code \r\n            const timeLeft = votingDeadline - timeNow\r\n            setTimeLeft(timeLeft)\r\n\r\n            const minutesLeft = Math.floor(timeLeft / 60)\r\n            setMinutesLeft(minutesLeft) \r\n            \r\n            const updateState = false\r\n            setUpdateState(updateState)\r\n          } \r\n      }\r\n      init();\r\n    }, [account]);\r\n    \r\n    async function update() {\r\n    \r\n        const init = async () => {\r\n    \r\n            let votingActive = await devilLock.methods.getVotingActive().call()\r\n            setVotingActive(votingActive);\r\n\r\n            let totalSupportVotes = await devilLock.methods.getTotalYesVotes().call()\r\n            setTotalSupportVotes(totalSupportVotes);\r\n\r\n            let totalOpposeVotes = await devilLock.methods.getTotalNoVotes().call()\r\n            setTotalOpposeVotes(totalOpposeVotes);\r\n\r\n            let userSupportVotes = await devilLock.methods.getUserYesVotes(account).call()\r\n            setUserSupportVotes(userSupportVotes);\r\n\r\n            let userOpposeVotes = await devilLock.methods.getUserNoVotes(account).call()\r\n            setUserOpposeVotes(userOpposeVotes);\r\n\r\n            let devilTokenBalance = await devilToken.methods.balanceOf(account).call()\r\n            setDevilTokenBalance(devilTokenBalance.toString());\r\n\r\n            let votingDeadline = await devilLock.methods.votingDeadline().call()\r\n            setVotingDeadline(votingDeadline);\r\n\r\n            let votingStartTime = await devilLock.methods.votingStartTime().call()\r\n            setVotingStartTime(votingStartTime);\r\n\r\n            let devilLockStatus = await devilLock.methods.devilLockStatus().call()\r\n            setDevilLockStatus(devilLockStatus);\r\n\r\n            let timeNow = Math.floor(Date.now() / 1000)\r\n            setTimeNow(timeNow);\r\n    \r\n        }\r\n        init();\r\n      }\r\n  \r\n    const voteSupport = async (amount) => {\r\n      setUpdateState(true)\r\n      devilLock.methods.voteSupport(amount).send({from: account}).on('transactionHash', (hash) => {\r\n      })\r\n  }\r\n\r\n    return (\r\n                    <div> \r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-3\">\r\n                            </div>\r\n                            <div class=\"col-6 justify-content-center\">\r\n                                <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                                    DEVIL LOCK\r\n                                </div>\r\n                                <div class=\"p\" style={{ textAlign: 'center' }}>\r\n                                    The Devil contract is currently <b>unlocked</b>. There is {votingActive ? 'an' : 'no'} active election.\r\n                                </div>\r\n                                <div class=\"p\" style={{ textAlign: 'center' }}>\r\n                                    There are <b>{minutesLeft > 1 ? minutesLeft : '0'} </b> minutes remaining.\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row row-40 justify-content-center\">\r\n                                {/* <div class=\"offset-xl\"> */}\r\n                                <div class=\"col-4\">\r\n                                </div>\r\n                                {/* <!-- Countdown--> */}                                 \r\n                                    <div class=\"col-4 justify-content-center\">\r\n                                    \r\n                                        {/* <Timer \r\n                                        hoursMinSecs={hoursMinSecs}\r\n                                        hours={hours}\r\n                                        minutes={minutes}\r\n                                        seconds={seconds}\r\n                                        votingDeadline={votingDeadline}\r\n                                        /> */}\r\n                                    {/* <p>{hours}</p>\r\n                                    <p>{minutes}</p>\r\n                                    <p>{seconds}</p>\r\n                                    <p>Deadline: {votingDeadline}</p>\r\n                                    <p>Vote start: {votingStartTime}</p>\r\n                                    <p>Difference: </p>\r\n                                    <p>Formatted: {formattedTime}</p>\r\n                                    <p>Time Left: {timeLeft} </p> */}\r\n                                        \r\n                                    </div>\r\n                                <div class=\"col-4\">\r\n                                </div>\r\n                        </div>         \r\n                        <div class=\"row row-30 justify-content-center\">\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-4\">\r\n                                <div class=\"h3\">\r\n                                    TOTAL SUPPORT  \r\n                                </div>\r\n                                    <p> {totalSupportVotes} </p>\r\n                            </div>\r\n                            <div class=\"col-4 justify-content-center\">\r\n                                {devilLockStatus === false ? <img class=\"mt-xxl-4\" src=\"assets/media/devl_locked_4.png\" alt=\"\" width=\"674\" height=\"572\"/> : <img class=\"mt-xxl-4\" src=\"assets/media/devl_locked_3.png\" alt=\"\" width=\"674\" height=\"572\"/> }\r\n                            </div>\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                                       TOTAL OPPOSE   \r\n                                    </div>\r\n                                    <p style={{ textAlign: 'right' }}>{totalOpposeVotes}</p>\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-4\">\r\n                                <div class=\"h3\">\r\n                                    USER SUPPORT   \r\n                                </div>\r\n                                <p> {userSupportVotes} </p>      \r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                      \r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                    <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                                        USER OPPOSE    \r\n                                    </div>\r\n                                         <p style={{ textAlign: 'right' }}>{userOpposeVotes}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-4 justify-content-center\">\r\n                                <form class=\"block block-sm justify-content-center\" data-np-checked=\"1\">\r\n                                    <p>Balance: {window.web3.utils.fromWei(devilTokenBalance, 'Ether')} </p>\r\n                                    {/* <AmountForm /> */}\r\n                                    {/* <input type=\"number\" ref={inputRef} className=\"form-control\"/> */}\r\n                                        \r\n                                        <button \r\n                                            type='submit'\r\n                                            onClick={(event) => {\r\n                                            event.preventDefault()\r\n                                            let amount\r\n                                            amount = 0\r\n                                            voteSupport(amount)\r\n                                            }}\r\n                                            className='btn btn-primary btn-lg btn-block'>Support\r\n                                        </button>\r\n                                        <button \r\n                                            type='submit'\r\n                                            onClick={(event) => {\r\n                                            event.preventDefault()\r\n                                            let amount\r\n                                            amount = inputRef.current.value.toString()\r\n                                            amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                            props.unstakeTokensVault(amount)\r\n                                            }}\r\n                                            className='btn btn-primary btn-lg btn-block'>Oppose\r\n                                        </button> \r\n                                        {/* <button \r\n                                            type='submit'\r\n                                            onClick={(event) => {\r\n                                            event.preventDefault()\r\n                                            }}\r\n                                            className='btn btn-primary btn-lg btn-block'>Update\r\n                                        </button> */}\r\n                                </form>\r\n                            </div>\r\n                                \r\n                        </div>\r\n                    </div>    \r\n        );\r\n    }\r\n          \r\n    export default (Governance);\r\n   \r\n","import React, { Component, useEffect, useState, setState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./App.css\";\r\nimport Vault from \"./Vault.js\";\r\nimport Gateway from \"./Gateway\"\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { useWalletModal } from \"@pancakeswap-libs/uikit\";\r\nimport Governance from \"./Governance\";\r\n\r\nfunction App() {\r\n\r\n  const { login, logout } = useAuth();\r\n  const { account, web3 } = useWeb3React();\r\n  const { onPresentConnectModal, onPresentAccountModal } = useWalletModal(\r\n    login,\r\n    logout,\r\n    account || undefined\r\n  );\r\n  console.log(account);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar\r\n          account={account}\r\n          onPresentConnectModal={onPresentConnectModal}\r\n          onPresentAccountModal={onPresentAccountModal}\r\n        />\r\n        <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\">\r\n          <div class=\"page\">\r\n            <section class=\"section-lg section-one-screen\">\r\n              <div class=\"container\">\r\n                <div class=\"tab tab-line\">\r\n                  <ul class=\"nav nav-line biggest\">\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link active show\" href=\"#tabs-1-1\" data-toggle=\"tab\">\r\n                        Gateway\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-2\" data-toggle=\"tab\">\r\n                        Vault\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-3\" data-toggle=\"tab\">\r\n                        Lock\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-4\" data-toggle=\"tab\">\r\n                        Information\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"tab-content\">\r\n                  <div class=\"tab-pane fade active show\" id=\"tabs-1-1\">\r\n                    <div class=\"box px-sm-4 px-xl-4 px-xxl-4\">\r\n                      <div className=\"content\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        {/* <p><p2>{account}</p2></p> */}\r\n                        <p></p>\r\n                      </div>\r\n                        <Gateway\r\n                          account={account}\r\n                          web3={web3}\r\n                        />  \r\n                        {/* <Vault\r\n                          account={account}\r\n                          web3={web3}\r\n                        /> */}\r\n                      </div>\r\n                      {/* <!-- Tab panes--> */}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-2\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      <Vault\r\n                          account={account}\r\n                          web3={web3}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-3\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      <Governance \r\n                          account={account}\r\n                          web3={web3}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-4\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL'S VAULT   \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Deposit your DEVL in order to earn your share of the 3% tax in the form of BUSD.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Global Staked refers to the total DEVL currently staked, while User Staked refers to your personal staking balance.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Lifetime Rewards tracks the total amount of BUSD awarded to all holders since the beginning.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Pending Rewards indicates the amount of BUSD you can claim.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL LOCK  \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Allows users to vote on when the contract can be unlocked, allowing the DEVL team to make changes to the token.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             The information at the top inform you if the contract is locked or unlocked, when locked, the token's functions cannot be called by the DEVL team until a successful vote.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Total Support and Total Oppose track the total votes in favor or in opposition to the DEVL team's request to unlock the contract.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             User Support and User Oppose track your votes.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL GATEWAY \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             <b>Version 1</b>\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To buy DEVL - enter the amount of BNB you wish to use.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To sell DEVL - enter the amount of DEVL you wish to sell.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             To onramp fiat for BSC BNB (BEP-20), click \"Buy Crypto\"\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Note: Price information coming after launch when connection available.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","import { ModalProvider } from \"@pancakeswap-libs/uikit\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { light, dark } from \"@pancakeswap-libs/uikit\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport React from \"react\";\r\nimport { App as ComponentApp } from \"./components/App\";\r\nimport Web3 from \"web3\";\r\nfunction getLibrary(provider, connector) {\r\n  return new Web3(provider); // this will vary according to whether you use e.g. ethers or web3.js\r\n}\r\nconst App = () => {\r\n  const SCTheme = dark;\r\n  // @ts-ignore\r\n  SCTheme.zIndices.modal = 1001;\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <ThemeProvider theme={SCTheme}>\r\n        <ModalProvider>\r\n          <ComponentApp />\r\n        </ModalProvider>\r\n      </ThemeProvider>\r\n    </Web3ReactProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}