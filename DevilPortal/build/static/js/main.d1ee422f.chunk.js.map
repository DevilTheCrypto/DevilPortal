{"version":3,"sources":["components/connectors.js","components/Navbar.js","components/Vault.js","connectors/NetworkConnector.ts","connectors/index.ts","hooks/useAuth.ts","components/Governance.js","components/App.js","App.js","serviceWorker.js","index.js"],"names":["InjectedConnector","supportedChainIds","Navbar","props","react_default","a","createElement","class","data-multi-switch","data-menuanchor","href","onClick","undefined","account","onPresentConnectModal","onPresentAccountModal","Vault","_React$useState","React","useState","_React$useState2","Object","slicedToArray","setNetworkId","_React$useState3","_React$useState4","devilToken","setDevilToken","_React$useState5","_React$useState6","setDevilTokenAddress","_React$useState7","_React$useState8","setRwd","_React$useState9","_React$useState10","setRwdAddress","_React$useState11","_React$useState12","_React$useState13","_React$useState14","devilVault","setDevilVault","_React$useState15","_React$useState16","setDevilVaultAddress","_React$useState17","_React$useState18","devilTokenBalance","setDevilTokenBalance","_React$useState19","_React$useState20","_React$useState21","_React$useState22","_React$useState23","_React$useState24","amountStaked","setAmountStaked","_React$useState25","_React$useState26","lifetimeRewardsGiven","setLifetimeRewardsGiven","_React$useState27","_React$useState28","globalStakingBalance","setGlobalStakingBalance","_React$useState29","_React$useState30","pendingUserRewards","setPendingUserRewards","_React$useState31","_React$useState32","setSymbol","_React$useState33","_React$useState34","updateState","setUpdateState","inputRef","useRef","update","_update","apply","this","arguments","asyncToGenerator","regenerator_default","mark","_callee4","wrap","_context4","prev","next","_ref3","_callee3","_context3","methods","balanceOf","call","sent","toString","globalStakingTokenBalance","rewardsPending","stop","init","window","web3","Web3","currentProvider","useEffect","_ref","_callee","networkId","_devilVault","rwdAddress","rwd","_devilTokenBalance","_amountStaked","_globalStakingBalance","_lifetimeRewardsGiven","_pendingUserRewards","_symbol","_context","eth","net","getId","Contract","DevilVaultAbi","console","log","error","alert","DevilTokenAbi","RwdAbi","symbol","events","Staked","fromBlock","on","event","Withdrawn","RewardClaimed","RewardDistributed","stakeTokensVault","_ref2","_callee2","amount","_context2","transfer","_address","send","from","hash","stake","_x","utils","fromWei","src","alt","width","height","style","textAlign","data-np-checked","type","ref","className","preventDefault","current","value","toWei","withdraw","unstakeTokensVault","claim","RequestError","message","code","data","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","Error","MiniRpcProvider","chainId","url","batchWaitTimeMs","_this2","isMetaMask","host","path","nextId","batchTimeoutId","batch","clearBatch","response","json","byKey","_iterator","_step","_result","_byKey$_result$id","resolve","reject","method","info","fetch","headers","content-type","accept","body","JSON","stringify","map","item","request","t0","forEach","abrupt","ok","concat","status","statusText","t1","_ref4","reduce","memo","id","_createForOfIteratorHelper","s","n","done","result","err","e","f","sendAsync","callback","params","then","jsonrpc","catch","_ref5","promise","Promise","push","setTimeout","_x2","parsed","URL","pathname","NetworkConnector","_AbstractConnector","_ref6","_this3","urls","defaultChainId","invariant","keys","length","k","Number","providers","currentChainId","accumulator","inherits","createClass","key","_activate","provider","_getProvider","_getChainId","_callee5","_context5","_getAccount","_callee6","_context6","get","AbstractConnector","NETWORK_URL","NETWORK_CHAIN_ID","parseInt","defineProperty","injected","bscConnector","BscConnector","walletconnect","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","connectorsByName","WalletLinkConnector","appName","appLogoUrl","_connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","useAuth","_useWeb3React","useWeb3React","activate","deactivate","toastError","_len","args","Array","_key","join","login","useCallback","connectorID","connector","localStorage","removeItem","connectorLocalStorageKey","UnsupportedChainIdError","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","name","logout","Governance","_useState","_useState2","hours","_useState3","_useState4","minutes","_useState5","_useState6","seconds","devilLock","setDevilLock","setDevilLockAddress","votingActive","setVotingActive","totalSupportVotes","setTotalSupportVotes","totalOpposeVotes","setTotalOpposeVotes","userSupportVotes","setUserSupportVotes","_React$useState35","_React$useState36","userOpposeVotes","setUserOpposeVotes","_React$useState37","_React$useState38","setVotingDeadline","_React$useState39","_React$useState40","setVotingStartTime","_React$useState41","_React$useState42","setTimeNow","_React$useState43","_React$useState44","setTimeLeft","_React$useState45","_React$useState46","minutesLeft","setMinutesLeft","_React$useState47","_React$useState48","devilLockStatus","setDevilLockStatus","votingDeadline","votingStartTime","timeNow","getVotingActive","getTotalYesVotes","getTotalNoVotes","getUserYesVotes","getUserNoVotes","Math","floor","Date","now","_devilLock","_votingActive","_totalSupportVotes","_totalOpposeVotes","_userSupportVotes","_userOpposeVotes","_votingDeadline","_votingStartTime","_devilLockStatus","_timeNow","_timeLeft","_minutesLeft","DevilLockAbi","UserVotedSupport","UserVotedOppose","DevilContractLocked","VotingElectionStatus","timeLeft","voteSupport","App","_useAuth","_useWalletModal","useWalletModal","Fragment","components_Navbar","role","data-toggle","components_Vault","components_Governance","getLibrary","SCTheme","dark","zIndices","modal","core_esm","styled_components_browser_esm","theme","index_esm","App_App","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1ee422f.chunk.js","sourcesContent":["import { InjectedConnector } from '@web3-react/injected-connector'\r\n\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 3, 4, 5, 42, 1337, 0x539],\r\n})","import React, { Component } from \"react\";\r\nimport { injected } from \"./connectors.js\";\r\nimport getWeb3 from \"./getWeb3\";\r\n\r\nfunction Navbar(props) {\r\n  return (\r\n    <header class=\"section rd-navbar-wrap\">\r\n      <nav class=\"rd-navbar\">\r\n        <div class=\"navbar-container\">\r\n          <div class=\"navbar-cell\">\r\n            <div class=\"navbar-panel\">\r\n              <button\r\n                class=\"navbar-switch\"\r\n                data-multi-switch='{\"targets\":\".rd-navbar\",\"scope\":\".rd-navbar\",\"isolate\":\"[data-multi-switch]\"}'\r\n              ></button>\r\n              <div class=\"navbar-logo\">\r\n                <h3>DEVIL PORTAL</h3>\r\n                </div>\r\n              \r\n              <p></p>\r\n              {/* <p>Contract: {contract} </p> */}\r\n              <p></p>\r\n            </div>\r\n          </div>\r\n          <div class=\"navbar-spacer\"></div>\r\n          <div class=\"navbar-cell navbar-sidebar\">\r\n            <ul class=\"navbar-navigation rd-navbar-nav fullpage-navigation\">\r\n              <li\r\n                class=\"navbar-navigation-root-item\"\r\n                data-menuanchor=\"ndex.html\"\r\n              >\r\n                <a class=\"navbar-navigation-root-link\" href=\"index.html\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div class=\"navbar-cell\">\r\n            <div class=\"navbar-subpanel\">\r\n              <div class=\"navbar-subpanel-item\">\r\n                <button\r\n                  class=\"navbar-button navbar-info-button mdi-dots-vertical\"\r\n                  data-multi-switch='{\"targets\":\".rd-navbar\",\"scope\":\".rd-navbar\",\"class\":\"navbar-info-active\",\"isolate\":\"[data-multi-switch]\"}'\r\n                ></button>\r\n                <div class=\"navbar-info\">\r\n                  {/* {this.state.account === undefined ?  */}\r\n                  <button\r\n                    class=\"btn btn-sm\"\r\n                    onClick={() => {\r\n                      if (props.account === undefined) {\r\n                        props.onPresentConnectModal();\r\n                      } else {\r\n                        props.onPresentAccountModal();\r\n                      }\r\n                    }}\r\n                  >\r\n                    {!props.account ? \"Connect Wallet\" : \" \"}{props.account}\r\n                  </button>\r\n                  {/* :    */}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component, useEffect, useState, setState, useRef } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport \"./App.css\";\r\nimport DevilVaultAbi from \"../remix_abis/DevilVault.json\";\r\nimport TetherAbi from \"../remix_abis/Tether.json\"\r\nimport RwdAbi from \"../remix_abis/RWD.json\"\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\n\r\nconst Vault = (props) => {\r\n\r\n  const [networkId, setNetworkId] = React.useState(undefined);\r\n  const [devilToken, setDevilToken] = React.useState([undefined]);\r\n  const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n  const [rwd, setRwd] = React.useState(undefined);\r\n  const [rwdAddress, setRwdAddress] = React.useState(\"\");\r\n  const [rewardTokenAddress, setRewardTokenAddress] = React.useState(\"\");\r\n  const [devilVault, setDevilVault] = React.useState([undefined]);\r\n  const [devilVaultAddress, setDevilVaultAddress] = React.useState(\"\");\r\n  const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n  const [rwdTokenBalance, setRwdTokenBalance] = React.useState(\"0\");\r\n  const [stakingBalance, setStakingBalance] = React.useState(\"0\");\r\n  const [amountStaked, setAmountStaked] = React.useState(\"0\");\r\n  const [lifetimeRewardsGiven, setLifetimeRewardsGiven] = React.useState(\"0\");\r\n  const [globalStakingBalance, setGlobalStakingBalance] = React.useState(\"0\");\r\n  const [pendingUserRewards, setPendingUserRewards] = React.useState(\"0\");\r\n  const [symbol, setSymbol] = React.useState([undefined]);\r\n  \r\n  const [updateState, setUpdateState] = React.useState(false);\r\n  const inputRef = useRef();\r\n\r\n  let account = props.account\r\n\r\n  window.web3 = new Web3(window.web3.currentProvider);\r\n\r\n  useEffect(() => {\r\n    \r\n    const init = async () => {\r\n\r\n      const web3 = window.web3;\r\n      const networkId = await web3.eth.net.getId();\r\n      setNetworkId(networkId);\r\n\r\n      try{\r\n      //LOAD Chad Vault\r\n      const devilVaultAddress = \"0x6c8F1e3AE632f32f8909fca798a1eBb5E114276B\";\r\n      setDevilVaultAddress(devilVaultAddress);\r\n      const devilVault = new web3.eth.Contract(\r\n        DevilVaultAbi,\r\n        devilVaultAddress\r\n      );\r\n      setDevilVault(devilVault);\r\n      console.log(devilVault);\r\n      } catch (error) {\r\n        alert(\r\n          'Failed to load chadvault.',\r\n              );\r\n      }\r\n\r\n        //LOAD devilToken\r\n        const devilTokenAddress = \"0x5Cd12C61999a7dFd4Dca8a1ee2773A4bb3d0DC70\";\r\n        setDevilTokenAddress(devilTokenAddress);\r\n        const devilToken = new web3.eth.Contract(\r\n          DevilTokenAbi,\r\n          devilTokenAddress\r\n        );\r\n        setDevilToken(devilToken);\r\n        console.log(devilToken);\r\n\r\n        //LOAD RWD\r\n        const rwdAddress = \"0x78867BbEeF44f2326bF8DDd1941a4439382EF2A7\";\r\n        setRwdAddress(rwdAddress);\r\n        const rwd = new web3.eth.Contract(\r\n          RwdAbi,\r\n          rwdAddress\r\n        );\r\n        setRwd(rwd);\r\n        console.log(rwd);\r\n\r\n        //Load our staking state and other account data\r\n\r\n        if (account !== undefined){\r\n          let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n          setDevilTokenBalance(devilTokenBalance.toString());\r\n          \r\n          const amountStaked = await devilVault.methods.amountStaked(account).call();\r\n          setAmountStaked(amountStaked.toString());\r\n\r\n          let globalStakingBalance = await devilVault.methods.globalStakingTokenBalance().call();\r\n          setGlobalStakingBalance(globalStakingBalance.toString());\r\n\r\n          let lifetimeRewardsGiven = await devilVault.methods.lifetimeRewardsGiven().call();\r\n          setLifetimeRewardsGiven(lifetimeRewardsGiven.toString());\r\n\r\n          let pendingUserRewards = await devilVault.methods.rewardsPending(account).call();\r\n          setPendingUserRewards(pendingUserRewards.toString());\r\n\r\n          let symbol = await rwd.methods.symbol().call();\r\n          setSymbol(symbol);\r\n\r\n          //event subscriptions that call update function to sync state variables w/ block chain\r\n\r\n          devilVault.events.Staked({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          devilVault.events.Withdrawn({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          devilVault.events.RewardClaimed({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n          \r\n          devilVault.events.RewardDistributed({fromBlock: 0})\r\n            .on('data', event => update()\r\n            );\r\n\r\n          const updateState = false\r\n          setUpdateState(updateState)\r\n        } \r\n        \r\n    }\r\n    init();\r\n  }, [account, amountStaked, setAmountStaked]);\r\n    \r\n  async function update() {\r\n    \r\n    const init = async () => {\r\n\r\n      let devilTokenBalance = await devilToken.methods.balanceOf(account).call();\r\n      setDevilTokenBalance(devilTokenBalance.toString());\r\n      \r\n      let amountStaked = await devilVault.methods.amountStaked(account).call();\r\n      setAmountStaked(amountStaked.toString());\r\n\r\n      let globalStakingBalance = await devilVault.methods.globalStakingTokenBalance().call();\r\n      setGlobalStakingBalance(globalStakingBalance.toString());\r\n\r\n      let lifetimeRewardsGiven = await devilVault.methods.lifetimeRewardsGiven().call();\r\n      setLifetimeRewardsGiven(lifetimeRewardsGiven.toString());\r\n\r\n      let pendingUserRewards = await devilVault.methods.rewardsPending(account).call();\r\n      setPendingUserRewards(pendingUserRewards.toString());\r\n\r\n    }\r\n    init();\r\n  }\r\n\r\n  const stakeTokensVault = async (amount) => {\r\n    setUpdateState(true)\r\n    // devilToken.methods.approve(devilVault._address, amount).send({from: account}).on('transactionHash', (hash) => {\r\n    devilToken.methods.transfer(devilVault._address, amount).send({from: account}).on('transactionHash', (hash) => { \r\n    devilVault.methods.stake(amount).send({from: account}).on('transactionHash', (hash) => { \r\n      })\r\n    })\r\n  // })\r\n\r\n}\r\n\r\n  const unstakeTokensVault = (amount) => {\r\n  setUpdateState(true)\r\n  devilVault.methods.withdraw(amount).send({from: account}).on('transactionHash', (hash) => {\r\n  })\r\n}\r\n\r\n  const claimRewards = () => {\r\n  setUpdateState(true)\r\n  devilVault.methods.claim().send({from: account}).on('transactionHash', (hash) => {\r\n  })\r\n}\r\n    \r\n        return (\r\n            <div> \r\n                <div class=\"row row-30 justify-content-left\">\r\n                    <div class=\"col-4\">\r\n                        <div>\r\n                            Status: <b>{updateState ? 'loading' : 'complete'}</b>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"col-4\">\r\n                        <div class=\"h3\">\r\n                            GLOBAL STAKED   \r\n                        </div>\r\n                            <p> {window.web3.utils.fromWei(globalStakingBalance, 'Ether')} DEVL </p>\r\n                    </div>\r\n                    <div class=\"col-4 justify-content-center\">\r\n                        <img class=\"mt-xxl-4\" src=\"assets/media/DEVIL_logo_red.png\" alt=\"\" width=\"674\" height=\"572\"/>\r\n                    </div>\r\n                        <div class=\"col-4\">\r\n                            <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                                GLOBAL REWARDS   \r\n                            </div>\r\n                                <p style={{ textAlign: 'right' }}>{window.web3.utils.fromWei(lifetimeRewardsGiven, 'Ether')} BUSD </p>\r\n                        </div>\r\n                </div>\r\n                <div class=\"row row-30 justify-content-center\">\r\n                    <div class=\"col-4\">\r\n                        <div class=\"h3\">\r\n                            USER \r\n                            STAKED   \r\n                        </div>\r\n                            <p> {window.web3.utils.fromWei(amountStaked, 'Ether')} DEVL </p>\r\n                    </div>\r\n                    <div class=\"col-4 justify-content-center\">\r\n                        <form class=\"block block-sm\" data-np-checked=\"1\">\r\n                            <p>Balance: {window.web3.utils.fromWei(devilTokenBalance, 'Ether')} </p>\r\n                            <input type=\"number\" ref={inputRef} className=\"form-control\" />\r\n                                \r\n                                <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    let amount\r\n                                    amount = inputRef.current.value.toString() \r\n                                    amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                    stakeTokensVault(amount)\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>DEPOSIT\r\n                                </button>\r\n                                \r\n                            \r\n                                <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    let amount\r\n                                    amount = inputRef.current.value.toString()\r\n                                    amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                    unstakeTokensVault(amount)\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>WITHDRAW\r\n                                </button> \r\n\r\n                                <button \r\n                                    type='submit'\r\n                                    onClick={(event) => {\r\n                                    event.preventDefault()\r\n                                    claimRewards()\r\n                                    }}\r\n                                    className='btn btn-primary btn-lg btn-block'>CLAIM\r\n                                </button>\r\n                        </form>\r\n                    </div>\r\n                        <div class=\"col-4\">\r\n                            <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                                PENDING REWARDS   \r\n                            </div>\r\n                                <p style={{ textAlign: 'right' }}> {window.web3.utils.fromWei(pendingUserRewards, 'Ether')} BUSD </p>\r\n                        </div>\r\n                </div>\r\n                {/* <div class=\"row row-30 justify-content-left\">\r\n                <p>Address: {props.account && props.account}</p>\r\n                </div> */}\r\n             \r\n                                                                  \r\n                      {/* <!-- Modal: JUST A CODE SAVE FOR TEMPLATE NOT ACTIVE--> */}\r\n                      {/* <div class=\"modal fade\" id=\"modal-login\" tabindex=\"-1\" role=\"dialog\">\r\n                          <div class=\"modal-dialog\" role=\"document\">\r\n                              <div class=\"modal-content\">\r\n                                  <div class=\"modal-body text-center\">\r\n                                      <h3>Log In</h3>\r\n                                      <p>Lorem ipsum dolor sit amet, consectetur adipiscing</p>\r\n                                      <form class=\"rd-mailform\">\r\n                                      <div class=\"form-group\">\r\n                                          <input class=\"form-control\" type=\"text\" name=\"name\" placeholder=\"Your name *\" data-constraints=\"@Required\" />\r\n                                      </div>\r\n                                      <div class=\"form-group\">\r\n                                          <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password *\" data-constraints=\"@Required\" />\r\n                                      </div>\r\n                                      <div class=\"offset-xxs group-40 d-flex flex-wrap flex-xs-nowrap align-items-center\">\r\n                                          <button class=\"btn btn-block\" type=\"submit\">Log in</button>\r\n                                      </div>\r\n                                      </form>\r\n                                  </div>\r\n                              <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">×</span></button>\r\n                              </div>\r\n                          </div>\r\n                      </div> */}\r\n                       {/* <!-- Preloader--> */}\r\n                      <div class=\"preloader\">\r\n                          <div class=\"preloader-inner\">\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                              <div class=\"preloader-dot\"></div>\r\n                          </div>\r\n                      </div>\r\n            </div>    \r\n          );\r\n        }\r\n    \r\nexport default (Vault);","import { ConnectorUpdate } from \"@web3-react/types\";\r\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\r\nimport invariant from \"tiny-invariant\";\r\n\r\ninterface NetworkConnectorArguments {\r\n  urls: { [chainId: number]: string };\r\n  defaultChainId?: number;\r\n}\r\n\r\n// taken from ethers.js, compatible interface with web3 provider\r\ntype AsyncSendable = {\r\n  isMetaMask?: boolean;\r\n  host?: string;\r\n  path?: string;\r\n  sendAsync?: (\r\n    request: any,\r\n    callback: (error: any, response: any) => void\r\n  ) => void;\r\n  send?: (request: any, callback: (error: any, response: any) => void) => void;\r\n};\r\n\r\nclass RequestError extends Error {\r\n  constructor(message: string, public code: number, public data?: unknown) {\r\n    super(message);\r\n  }\r\n}\r\n\r\ninterface BatchItem {\r\n  request: { jsonrpc: \"2.0\"; id: number; method: string; params: unknown };\r\n  resolve: (result: any) => void;\r\n  reject: (error: Error) => void;\r\n}\r\n\r\nclass MiniRpcProvider implements AsyncSendable {\r\n  public readonly isMetaMask: false = false;\r\n\r\n  public readonly chainId: number;\r\n\r\n  public readonly url: string;\r\n\r\n  public readonly host: string;\r\n\r\n  public readonly path: string;\r\n\r\n  public readonly batchWaitTimeMs: number;\r\n\r\n  private nextId = 1;\r\n\r\n  private batchTimeoutId: ReturnType<typeof setTimeout> | null = null;\r\n\r\n  private batch: BatchItem[] = [];\r\n\r\n  constructor(chainId: number, url: string, batchWaitTimeMs?: number) {\r\n    this.chainId = chainId;\r\n    this.url = url;\r\n    const parsed = new URL(url);\r\n    this.host = parsed.host;\r\n    this.path = parsed.pathname;\r\n    // how long to wait to batch calls\r\n    this.batchWaitTimeMs = 50;\r\n  }\r\n\r\n  public readonly clearBatch = async () => {\r\n    console.info(\"Clearing batch\", this.batch);\r\n    const { batch } = this;\r\n    this.batch = [];\r\n    this.batchTimeoutId = null;\r\n    let response: Response;\r\n    try {\r\n      response = await fetch(this.url, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(batch.map((item) => item.request)),\r\n      });\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(new Error(\"Failed to send batch call\"))\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!response.ok) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(\r\n          new RequestError(`${response.status}: ${response.statusText}`, -32000)\r\n        )\r\n      );\r\n      return;\r\n    }\r\n\r\n    let json;\r\n    try {\r\n      json = await response.json();\r\n    } catch (error) {\r\n      batch.forEach(({ reject }) =>\r\n        reject(new Error(\"Failed to parse JSON response\"))\r\n      );\r\n      return;\r\n    }\r\n    const byKey = batch.reduce<{ [id: number]: BatchItem }>((memo, current) => {\r\n      memo[current.request.id] = current;\r\n      return memo;\r\n    }, {});\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const result of json) {\r\n      const {\r\n        resolve,\r\n        reject,\r\n        request: { method },\r\n      } = byKey[result.id];\r\n      // @ts-ignore\r\n      // eslint-disable-next-line no-restricted-syntax\r\n      if (resolve && reject) {\r\n        if (\"error\" in result) {\r\n          reject(\r\n            new RequestError(\r\n              result.error.message,\r\n              result.error.code,\r\n              result.error.data\r\n            )\r\n          );\r\n        } else if (\"result\" in result) {\r\n          resolve(result.result);\r\n        } else {\r\n          reject(\r\n            new RequestError(\r\n              `Received unexpected JSON-RPC response to ${method} request.`,\r\n              -32000,\r\n              result\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  public readonly sendAsync = (\r\n    request: {\r\n      jsonrpc: \"2.0\";\r\n      id: number | string | null;\r\n      method: string;\r\n      params?: any;\r\n    },\r\n    callback: (error: any, response: any) => void\r\n  ): void => {\r\n    this.request(request.method, request.params)\r\n      .then((result) =>\r\n        callback(null, { jsonrpc: \"2.0\", id: request.id, result })\r\n      )\r\n      .catch((error) => callback(error, null));\r\n  };\r\n\r\n  public readonly request = async (\r\n    method: string | { method: string; params: unknown[] },\r\n    params?: any\r\n  ): Promise<unknown> => {\r\n    if (typeof method !== \"string\") {\r\n      return this.request(method.method, method.params);\r\n    }\r\n    if (method === \"eth_chainId\") {\r\n      return `0x${this.chainId.toString(16)}`;\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      this.batch.push({\r\n        request: {\r\n          jsonrpc: \"2.0\",\r\n          id: this.nextId++,\r\n          method,\r\n          params,\r\n        },\r\n        resolve,\r\n        reject,\r\n      });\r\n    });\r\n    if (!this.batchTimeoutId)\r\n      this.batchTimeoutId = setTimeout(this.clearBatch, this.batchWaitTimeMs);\r\n    return promise;\r\n  };\r\n}\r\n\r\nexport class NetworkConnector extends AbstractConnector {\r\n  private readonly providers: { [chainId: number]: MiniRpcProvider };\r\n\r\n  private currentChainId: number;\r\n\r\n  constructor({ urls, defaultChainId }: NetworkConnectorArguments) {\r\n    invariant(\r\n      defaultChainId || Object.keys(urls).length === 1,\r\n      \"defaultChainId is a required argument with >1 url\"\r\n    );\r\n    super({\r\n      supportedChainIds: Object.keys(urls).map((k): number => Number(k)),\r\n    });\r\n\r\n    this.currentChainId = defaultChainId || Number(Object.keys(urls)[0]);\r\n    this.providers = Object.keys(urls).reduce<{\r\n      [chainId: number]: MiniRpcProvider;\r\n    }>((accumulator, chainId) => {\r\n      accumulator[Number(chainId)] = new MiniRpcProvider(\r\n        Number(chainId),\r\n        urls[Number(chainId)]\r\n      );\r\n      return accumulator;\r\n    }, {});\r\n  }\r\n\r\n  public get provider(): MiniRpcProvider {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    return {\r\n      provider: this.providers[this.currentChainId],\r\n      chainId: this.currentChainId,\r\n      account: null,\r\n    };\r\n  }\r\n\r\n  public async getProvider(): Promise<MiniRpcProvider> {\r\n    return this.providers[this.currentChainId];\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.currentChainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return null;\r\n  }\r\n\r\n  public deactivate() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default NetworkConnector;\r\n","import { ConnectorNames } from \"@pancakeswap-libs/uikit\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { WalletLinkConnector } from \"@web3-react/walletlink-connector\";\r\nimport { BscConnector } from \"@binance-chain/bsc-connector\";\r\nimport { NetworkConnector } from \"./NetworkConnector\";\r\n\r\nconst NETWORK_URL = \"https://bsc-dataseed.binance.org/\";\r\n\r\nexport const NETWORK_CHAIN_ID: number = parseInt(\"56\");\r\n\r\nif (typeof NETWORK_URL === \"undefined\") {\r\n  throw new Error(\r\n    `REACT_APP_NETWORK_URL must be a defined environment variable`\r\n  );\r\n}\r\n\r\nexport const network = new NetworkConnector({\r\n  urls: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n});\r\n\r\nlet networkLibrary: Web3Provider | undefined;\r\nexport function getNetworkLibrary(): Web3Provider {\r\n  if (!networkLibrary)\r\n    networkLibrary = new Web3Provider(network.provider as any);\r\n  // eslint-disable-next-line no-return-assign\r\n  return networkLibrary;\r\n}\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [56, 97],\r\n});\r\n\r\nexport const bscConnector = new BscConnector({ supportedChainIds: [56] });\r\n\r\n// mainnet only\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { [NETWORK_CHAIN_ID]: NETWORK_URL },\r\n  bridge: \"https://pancakeswap.bridge.walletconnect.org\",\r\n  qrcode: true,\r\n  pollingInterval: 15000,\r\n});\r\n\r\n// mainnet only\r\nexport const walletlink = new WalletLinkConnector({\r\n  url: NETWORK_URL,\r\n  appName: \"Uniswap\",\r\n  appLogoUrl:\r\n    \"https://mpng.pngfly.com/20181202/bex/kisspng-emoji-domain-unicorn-pin-badges-sticker-unicorn-tumblr-emoji-unicorn-iphoneemoji-5c046729264a77.5671679315437924251569.jpg\",\r\n});\r\n\r\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\r\n  [ConnectorNames.Injected]: injected,\r\n  [ConnectorNames.WalletConnect]: walletconnect,\r\n  [ConnectorNames.BSC]: bscConnector,\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\r\nimport { NoBscProviderError } from \"@binance-chain/bsc-connector\";\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from \"@web3-react/injected-connector\";\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from \"@web3-react/walletconnect-connector\";\r\nimport {\r\n  connectorLocalStorageKey,\r\n  ConnectorNames,\r\n} from \"@pancakeswap-libs/uikit\";\r\n\r\nimport { connectorsByName } from \"../connectors/index\";\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React();\r\n  // const { toastError } = useToast();\r\n  // @ts-ignore\r\n  const toastError = (err, ...args) => alert(err + \": \" + args.join(\" - \"));\r\n\r\n  const login = useCallback((connectorID: ConnectorNames) => {\r\n    const connector = connectorsByName[connectorID];\r\n    if (connector) {\r\n      console.log(connector);\r\n      activate(connector, async (error: Error) => {\r\n        window.localStorage.removeItem(connectorLocalStorageKey);\r\n        if (error instanceof UnsupportedChainIdError) {\r\n          toastError(\r\n            \"Unsupported Chain Id\",\r\n            \"Unsupported Chain Id Error. Check your chain Id.\"\r\n          );\r\n        } else if (\r\n          error instanceof NoEthereumProviderError ||\r\n          error instanceof NoBscProviderError\r\n        ) {\r\n          toastError(\"Provider Error\", \"No provider was found\");\r\n        } else if (\r\n          error instanceof UserRejectedRequestErrorInjected ||\r\n          error instanceof UserRejectedRequestErrorWalletConnect\r\n        ) {\r\n          if (connector instanceof WalletConnectConnector) {\r\n            const walletConnector = connector as WalletConnectConnector;\r\n            walletConnector.walletConnectProvider = null;\r\n          }\r\n          toastError(\r\n            \"Authorization Error\",\r\n            \"Please authorize to access your account\"\r\n          );\r\n        } else {\r\n          toastError(error.name, error.message);\r\n        }\r\n      });\r\n    } else {\r\n      toastError(\"Can't find connector\", \"The connector config is wrong\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return { login, logout: deactivate };\r\n};\r\n\r\nexport default useAuth;\r\n","import React, {Component, useRef, ReactDOM, useState, useEffect} from 'react';\r\nimport Web3 from \"web3\";\r\nimport Timer from './Timer';\r\nimport DevilLockAbi from \"../remix_abis/DevilLock.json\";\r\nimport TetherAbi from \"../remix_abis/Tether.json\";\r\nimport DevilTokenAbi from \"../remix_abis/DevilToken.json\";\r\n\r\nconst Governance = (props) => {\r\n\r\n    //timer variables\r\n    const [hours, setHours] = useState(0)\r\n    const [minutes, setMinutes] = useState(0)\r\n    const [seconds, setSeconds] = useState(0)\r\n    const [formattedTime, setFormattedTime] = React.useState()\r\n    const [hoursMinSecs, setHoursMinSecs] = React.useState({hours:hours, minutes:minutes, seconds:seconds})\r\n    \r\n\r\n    const [networkId, setNetworkId] = React.useState(undefined);\r\n    const [devilToken, setDevilToken] = React.useState([undefined]);\r\n    const [devilTokenAddress, setDevilTokenAddress] = React.useState(\"\");\r\n    const [rwd, setRwd] = React.useState(undefined);\r\n    const [rwdAddress, setRwdAddress] = React.useState(\"\")\r\n    const [devilVault, setDevilVault] = React.useState([undefined]);\r\n    const [devilVaultAddress, setDevilVaultAddress] = React.useState(\"\");\r\n    const [devilTokenBalance, setDevilTokenBalance] = React.useState(\"0\");\r\n    const [updateState, setUpdateState] = React.useState(false);\r\n\r\n    //Devil Lock loading\r\n    const [devilLock, setDevilLock] = React.useState([undefined]);\r\n    const [devilLockAddress, setDevilLockAddress] = React.useState(\"\");\r\n    const [votingActive, setVotingActive] = React.useState(false);\r\n    const [totalSupportVotes, setTotalSupportVotes] = React.useState(0);\r\n    const [totalOpposeVotes, setTotalOpposeVotes] = React.useState(0);\r\n    const [userSupportVotes, setUserSupportVotes] = React.useState(0);\r\n    const [userOpposeVotes, setUserOpposeVotes] = React.useState(0);\r\n    const [votingDeadline, setVotingDeadline] = React.useState(0);\r\n    const [votingStartTime, setVotingStartTime] = React.useState(0);\r\n    const [timeNow, setTimeNow] = React.useState();\r\n    const [timeLeft, setTimeLeft] = React.useState();\r\n    const [minutesLeft, setMinutesLeft] = React.useState();\r\n    const [devilLockStatus, setDevilLockStatus] = React.useState(true);\r\n\r\n    const inputRef = useRef()\r\n    let account = props.account\r\n  \r\n    window.web3 = new Web3(window.web3.currentProvider);\r\n  \r\n    useEffect(() => {\r\n      \r\n      const init = async () => {\r\n  \r\n        const web3 = window.web3;\r\n        const networkId = await web3.eth.net.getId();\r\n        setNetworkId(networkId);\r\n  \r\n        try{\r\n        //LOAD Devil lock\r\n        const devilLockAddress = \"0x5A0431d5A43dFbCebe947De58Fd07EdF26333F02\";\r\n        setDevilLockAddress(devilLockAddress);\r\n        const devilLock = new web3.eth.Contract(\r\n          DevilLockAbi,\r\n          devilLockAddress\r\n        );\r\n        setDevilLock(devilLock);\r\n        console.log(devilLock);\r\n        } catch (error) {\r\n          alert(\r\n            'Failed to load Devil Lock.',\r\n                );\r\n        }\r\n\r\n        //LOAD devilToken\r\n        const devilTokenAddress = \"0x5Cd12C61999a7dFd4Dca8a1ee2773A4bb3d0DC70\";\r\n        setDevilTokenAddress(devilTokenAddress);\r\n        const devilToken = new web3.eth.Contract(\r\n          DevilTokenAbi,\r\n          devilTokenAddress\r\n        );\r\n        setDevilToken(devilToken);\r\n        console.log(devilToken);\r\n    \r\n        //Load our staking state and other account data\r\n  \r\n          if (account !== undefined){\r\n            let votingActive = await devilLock.methods.getVotingActive().call()\r\n            setVotingActive(votingActive)\r\n\r\n            let totalSupportVotes = await devilLock.methods.getTotalYesVotes().call()\r\n            setTotalSupportVotes(totalSupportVotes)\r\n\r\n            let totalOpposeVotes = await devilLock.methods.getTotalNoVotes().call()\r\n            setTotalOpposeVotes(totalOpposeVotes)\r\n\r\n            let userSupportVotes = await devilLock.methods.getUserYesVotes(account).call()\r\n            setUserSupportVotes(userSupportVotes)\r\n\r\n            let userOpposeVotes = await devilLock.methods.getUserNoVotes(account).call()\r\n            setUserOpposeVotes(userOpposeVotes);\r\n\r\n            let devilTokenBalance = await devilToken.methods.balanceOf(account).call()\r\n            setDevilTokenBalance(devilTokenBalance.toString())\r\n\r\n            let votingDeadline = await devilLock.methods.votingDeadline().call()\r\n            setVotingDeadline(votingDeadline);\r\n\r\n            let votingStartTime = await devilLock.methods.votingStartTime().call()\r\n            setVotingStartTime(votingStartTime);\r\n\r\n            let devilLockStatus = await devilLock.methods.devilLockStatus().call()\r\n            setDevilLockStatus(devilLockStatus);\r\n\r\n            let timeNow = Math.floor(Date.now() / 1000)\r\n            setTimeNow(timeNow);\r\n\r\n            //event subscriptions that call update function to sync state variables w/ block chain\r\n\r\n            devilLock.events.UserVotedSupport({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            devilLock.events.UserVotedOppose({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            devilLock.events.DevilContractLocked({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            devilLock.events.VotingElectionStatus({fromBlock: 0})\r\n                .on('data', event => update()\r\n            );\r\n\r\n            //Timer code \r\n            const timeLeft = votingDeadline - timeNow\r\n            setTimeLeft(timeLeft)\r\n\r\n            const minutesLeft = Math.floor(timeLeft / 60)\r\n            setMinutesLeft(minutesLeft) \r\n            \r\n            const updateState = false\r\n            setUpdateState(updateState)\r\n          } \r\n      }\r\n      init();\r\n    }, [account]);\r\n    \r\n    async function update() {\r\n    \r\n        const init = async () => {\r\n    \r\n            let votingActive = await devilLock.methods.getVotingActive().call()\r\n            setVotingActive(votingActive);\r\n\r\n            let totalSupportVotes = await devilLock.methods.getTotalYesVotes().call()\r\n            setTotalSupportVotes(totalSupportVotes);\r\n\r\n            let totalOpposeVotes = await devilLock.methods.getTotalNoVotes().call()\r\n            setTotalOpposeVotes(totalOpposeVotes);\r\n\r\n            let userSupportVotes = await devilLock.methods.getUserYesVotes(account).call()\r\n            setUserSupportVotes(userSupportVotes);\r\n\r\n            let userOpposeVotes = await devilLock.methods.getUserNoVotes(account).call()\r\n            setUserOpposeVotes(userOpposeVotes);\r\n\r\n            let devilTokenBalance = await devilToken.methods.balanceOf(account).call()\r\n            setDevilTokenBalance(devilTokenBalance.toString());\r\n\r\n            let votingDeadline = await devilLock.methods.votingDeadline().call()\r\n            setVotingDeadline(votingDeadline);\r\n\r\n            let votingStartTime = await devilLock.methods.votingStartTime().call()\r\n            setVotingStartTime(votingStartTime);\r\n\r\n            let devilLockStatus = await devilLock.methods.devilLockStatus().call()\r\n            setDevilLockStatus(devilLockStatus);\r\n\r\n            let timeNow = Math.floor(Date.now() / 1000)\r\n            setTimeNow(timeNow);\r\n    \r\n        }\r\n        init();\r\n      }\r\n  \r\n    const voteSupport = async (amount) => {\r\n      setUpdateState(true)\r\n      devilLock.methods.voteSupport(amount).send({from: account}).on('transactionHash', (hash) => {\r\n      })\r\n  }\r\n\r\n    return (\r\n                    <div> \r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-3\">\r\n                            </div>\r\n                            <div class=\"col-6 justify-content-center\">\r\n                                <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                                    DEVIL LOCK\r\n                                </div>\r\n                                <div class=\"p\" style={{ textAlign: 'center' }}>\r\n                                    The Devil contract is currently <b>unlocked</b>. There is {votingActive ? 'an' : 'no'} active election.\r\n                                </div>\r\n                                <div class=\"p\" style={{ textAlign: 'center' }}>\r\n                                    There are <b>{minutesLeft > 1 ? minutesLeft : '0'} </b> minutes remaining.\r\n                                </div>\r\n                               \r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row row-40 justify-content-center\">\r\n                                {/* <div class=\"offset-xl\"> */}\r\n                                <div class=\"col-4\">\r\n                                </div>\r\n                                {/* <!-- Countdown--> */}                                 \r\n                                    <div class=\"col-4 justify-content-center\">\r\n                                    \r\n                                        {/* <Timer \r\n                                        hoursMinSecs={hoursMinSecs}\r\n                                        hours={hours}\r\n                                        minutes={minutes}\r\n                                        seconds={seconds}\r\n                                        votingDeadline={votingDeadline}\r\n                                        /> */}\r\n                                    {/* <p>{hours}</p>\r\n                                    <p>{minutes}</p>\r\n                                    <p>{seconds}</p>\r\n                                    <p>Deadline: {votingDeadline}</p>\r\n                                    <p>Vote start: {votingStartTime}</p>\r\n                                    <p>Difference: </p>\r\n                                    <p>Formatted: {formattedTime}</p>\r\n                                    <p>Time Left: {timeLeft} </p> */}\r\n                                        \r\n                                    </div>\r\n                                <div class=\"col-4\">\r\n                                </div>\r\n                        </div>         \r\n                        <div class=\"row row-30 justify-content-center\">\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-4\">\r\n                                <div class=\"h3\">\r\n                                    TOTAL SUPPORT  \r\n                                </div>\r\n                                    <p> {totalSupportVotes} </p>\r\n                            </div>\r\n                            <div class=\"col-4 justify-content-center\">\r\n                                {devilLockStatus === true ? <img class=\"mt-xxl-4\" src=\"assets/media/devl_locked_4.png\" alt=\"\" width=\"674\" height=\"572\"/> : <img class=\"mt-xxl-4\" src=\"assets/media/devl_locked_3.png\" alt=\"\" width=\"674\" height=\"572\"/> }\r\n                            </div>\r\n                                <div class=\"col-4\">\r\n                                    <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                                       TOTAL OPPOSE   \r\n                                    </div>\r\n                                    <p style={{ textAlign: 'right' }}>{totalOpposeVotes}</p>\r\n                                </div>\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-4\">\r\n                                <div class=\"h3\">\r\n                                    USER SUPPORT   \r\n                                </div>\r\n                                <p> {userSupportVotes} </p>      \r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                      \r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                    <div class=\"h3\" style={{ textAlign: 'right' }}>\r\n                                        USER OPPOSE    \r\n                                    </div>\r\n                                         <p style={{ textAlign: 'right' }}>{userOpposeVotes}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row row-30 justify-content-center\">\r\n                            <div class=\"col-4 justify-content-center\">\r\n                                <form class=\"block block-sm justify-content-center\" data-np-checked=\"1\">\r\n                                    <p>Balance: {window.web3.utils.fromWei(devilTokenBalance, 'Ether')} </p>\r\n                                    {/* <AmountForm /> */}\r\n                                    {/* <input type=\"number\" ref={inputRef} className=\"form-control\"/> */}\r\n                                        \r\n                                        <button \r\n                                            type='submit'\r\n                                            onClick={(event) => {\r\n                                            event.preventDefault()\r\n                                            let amount\r\n                                            amount = 0\r\n                                            voteSupport(amount)\r\n                                            }}\r\n                                            className='btn btn-primary btn-lg btn-block'>Support\r\n                                        </button>\r\n                                        <button \r\n                                            type='submit'\r\n                                            onClick={(event) => {\r\n                                            event.preventDefault()\r\n                                            let amount\r\n                                            amount = inputRef.current.value.toString()\r\n                                            amount = window.web3.utils.toWei(amount, 'Ether')\r\n                                            props.unstakeTokensVault(amount)\r\n                                            }}\r\n                                            className='btn btn-primary btn-lg btn-block'>Oppose\r\n                                        </button> \r\n                                        {/* <button \r\n                                            type='submit'\r\n                                            onClick={(event) => {\r\n                                            event.preventDefault()\r\n                                            }}\r\n                                            className='btn btn-primary btn-lg btn-block'>Update\r\n                                        </button> */}\r\n                                </form>\r\n                            </div>\r\n                                \r\n                        </div>\r\n                    </div>    \r\n        );\r\n    }\r\n          \r\n    export default (Governance);\r\n   \r\n","import React, { Component, useEffect, useState, setState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"./App.css\";\r\nimport Vault from \"./Vault.js\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport useAuth from \"../hooks/useAuth\";\r\nimport { useWalletModal } from \"@pancakeswap-libs/uikit\";\r\nimport Governance from \"./Governance\";\r\n\r\nfunction App() {\r\n   \r\n  const { login, logout } = useAuth();\r\n  const { account, web3 } = useWeb3React();\r\n  const { onPresentConnectModal, onPresentAccountModal } = useWalletModal(\r\n    login,\r\n    logout,\r\n    account || undefined\r\n  );\r\n  console.log(account);\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <Navbar\r\n          account={account}\r\n          onPresentConnectModal={onPresentConnectModal}\r\n          onPresentAccountModal={onPresentAccountModal}\r\n        />\r\n        <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\">\r\n          <div class=\"page\">\r\n            <section class=\"section-lg section-one-screen\">\r\n              <div class=\"container\">\r\n                <div class=\"tab tab-line\">\r\n                  <ul class=\"nav nav-line biggest\">\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a\r\n                        class=\"nav-link active show\"\r\n                        href=\"#tabs-1-1\"\r\n                        data-toggle=\"tab\">\r\n                        Devil's Vault\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a class=\"nav-link\" href=\"#tabs-1-2\" data-toggle=\"tab\">\r\n                        Governance\r\n                      </a>\r\n                    </li>\r\n                    <li class=\"nav-item\" role=\"presentation\">\r\n                      <a\r\n                        class=\"nav-link active show\"\r\n                        href=\"#tabs-1-3\"\r\n                        data-toggle=\"tab\">\r\n                        Information\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n                <div class=\"tab-content\">\r\n                  <div class=\"tab-pane fade active show\" id=\"tabs-1-1\">\r\n                    <div class=\"box px-sm-4 px-xl-4 px-xxl-4\">\r\n                      <div className=\"content\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        {/* <p><p2>{account}</p2></p> */}\r\n                        <p></p>\r\n                      </div>  \r\n                        <Vault\r\n                          account={account}\r\n                          web3={web3}\r\n                        />\r\n                      </div>\r\n                      {/* <!-- Tab panes--> */}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-2\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      <Governance \r\n                        account={account}\r\n                        web3={web3}\r\n                      />\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"tab-pane fade\" id=\"tabs-1-3\">\r\n                    <div class=\"box px-xl-4 px-xxl-4\">\r\n                    <div className=\"content\">\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL'S VAULT   \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Version 1\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Deposit your DEVL in order to earn your share of the 3% tax in the form of BUSD.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Global Staked refers to the total DEVL currently staked, while User Staked refers to your personal staking balance.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Lifetime Rewards tracks the total amount of BUSD awarded to all holders since the beginning.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Pending Rewards indicates the amount of BUSD you can claim.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row row-30 justify-content-center\">\r\n                        <div class=\"col-10 justify-content-center\">\r\n                          <div class=\"h3\" style={{ textAlign: 'center' }}>\r\n                              DEVIL LOCK  \r\n                          </div>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Version 1\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Allows users to vote on when the contract can be unlocked, allowing the DEVL team to make changes to the token.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             The information at the top inform you if the contract is locked or unlocked, when locked, the token's functions cannot be called by the DEVL team until a successful vote.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             Total Support and Total Oppose track the total votes in favor or in opposition to the DEVL team's request to unlock the contract.\r\n                          </p>\r\n                          <p style={{ textAlign: 'center' }}>\r\n                             User Support and User Oppose track your votes.\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport { App };\r\n","import { ModalProvider } from \"@pancakeswap-libs/uikit\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { light, dark } from \"@pancakeswap-libs/uikit\";\r\nimport { Web3ReactProvider } from \"@web3-react/core\";\r\nimport React from \"react\";\r\nimport { App as ComponentApp } from \"./components/App\";\r\nimport Web3 from \"web3\";\r\nfunction getLibrary(provider, connector) {\r\n  return new Web3(provider); // this will vary according to whether you use e.g. ethers or web3.js\r\n}\r\nconst App = () => {\r\n  const SCTheme = dark;\r\n  // @ts-ignore\r\n  SCTheme.zIndices.modal = 1001;\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <ThemeProvider theme={SCTheme}>\r\n        <ModalProvider>\r\n          <ComponentApp />\r\n        </ModalProvider>\r\n      </ThemeProvider>\r\n    </Web3ReactProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}